#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="techreporting")]
public partial class TechReportingDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertMITPLSiteEmailConfiguration(MITPLSiteEmailConfiguration instance);
  partial void UpdateMITPLSiteEmailConfiguration(MITPLSiteEmailConfiguration instance);
  partial void DeleteMITPLSiteEmailConfiguration(MITPLSiteEmailConfiguration instance);
    #endregion

    public TechReportingDataContext() :
            base(global::System.Configuration.ConfigurationManager.ConnectionStrings["techreportingConnectionString"].ConnectionString, mappingSource)
    {
        OnCreated();
    }

    public TechReportingDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TechReportingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TechReportingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<MITPLSiteEmailConfiguration> MITPLSiteEmailConfigurations
	{
		get
		{
			return this.GetTable<MITPLSiteEmailConfiguration>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MITPLSiteEmailConfiguration")]
public partial class MITPLSiteEmailConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EConfigId;
	
	private string _Host;
	
	private System.Nullable<int> _Port;
	
	private string _HostUserName;
	
	private System.Data.Linq.Binary _HostPassword;
	
	private string _SiteName;
	
	private System.Nullable<bool> _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEConfigIdChanging(int value);
    partial void OnEConfigIdChanged();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OnHostUserNameChanging(string value);
    partial void OnHostUserNameChanged();
    partial void OnHostPasswordChanging(System.Data.Linq.Binary value);
    partial void OnHostPasswordChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
	
	public MITPLSiteEmailConfiguration()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EConfigId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EConfigId
	{
		get
		{
			return this._EConfigId;
		}
		set
		{
			if ((this._EConfigId != value))
			{
				this.OnEConfigIdChanging(value);
				this.SendPropertyChanging();
				this._EConfigId = value;
				this.SendPropertyChanged("EConfigId");
				this.OnEConfigIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Host", DbType="VarChar(50)")]
	public string Host
	{
		get
		{
			return this._Host;
		}
		set
		{
			if ((this._Host != value))
			{
				this.OnHostChanging(value);
				this.SendPropertyChanging();
				this._Host = value;
				this.SendPropertyChanged("Host");
				this.OnHostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int")]
	public System.Nullable<int> Port
	{
		get
		{
			return this._Port;
		}
		set
		{
			if ((this._Port != value))
			{
				this.OnPortChanging(value);
				this.SendPropertyChanging();
				this._Port = value;
				this.SendPropertyChanged("Port");
				this.OnPortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostUserName", DbType="VarChar(100)")]
	public string HostUserName
	{
		get
		{
			return this._HostUserName;
		}
		set
		{
			if ((this._HostUserName != value))
			{
				this.OnHostUserNameChanging(value);
				this.SendPropertyChanging();
				this._HostUserName = value;
				this.SendPropertyChanged("HostUserName");
				this.OnHostUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostPassword", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary HostPassword
	{
		get
		{
			return this._HostPassword;
		}
		set
		{
			if ((this._HostPassword != value))
			{
				this.OnHostPasswordChanging(value);
				this.SendPropertyChanging();
				this._HostPassword = value;
				this.SendPropertyChanged("HostPassword");
				this.OnHostPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteName", DbType="VarChar(50)")]
	public string SiteName
	{
		get
		{
			return this._SiteName;
		}
		set
		{
			if ((this._SiteName != value))
			{
				this.OnSiteNameChanging(value);
				this.SendPropertyChanging();
				this._SiteName = value;
				this.SendPropertyChanged("SiteName");
				this.OnSiteNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591

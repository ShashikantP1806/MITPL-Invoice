#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MITPLInvoice")]
public partial class MITInvoiceDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertPasswordLink(PasswordLink instance);
  partial void UpdatePasswordLink(PasswordLink instance);
  partial void DeletePasswordLink(PasswordLink instance);
  partial void InsertAttachmentMaster(AttachmentMaster instance);
  partial void UpdateAttachmentMaster(AttachmentMaster instance);
  partial void DeleteAttachmentMaster(AttachmentMaster instance);
  partial void InsertCityMaster(CityMaster instance);
  partial void UpdateCityMaster(CityMaster instance);
  partial void DeleteCityMaster(CityMaster instance);
  partial void InsertClientContactMaster(ClientContactMaster instance);
  partial void UpdateClientContactMaster(ClientContactMaster instance);
  partial void DeleteClientContactMaster(ClientContactMaster instance);
  partial void InsertCountryMaster(CountryMaster instance);
  partial void UpdateCountryMaster(CountryMaster instance);
  partial void DeleteCountryMaster(CountryMaster instance);
  partial void InsertCurrencyMaster(CurrencyMaster instance);
  partial void UpdateCurrencyMaster(CurrencyMaster instance);
  partial void DeleteCurrencyMaster(CurrencyMaster instance);
  partial void InsertDepartmentMaster(DepartmentMaster instance);
  partial void UpdateDepartmentMaster(DepartmentMaster instance);
  partial void DeleteDepartmentMaster(DepartmentMaster instance);
  partial void InsertFollowUpMaster(FollowUpMaster instance);
  partial void UpdateFollowUpMaster(FollowUpMaster instance);
  partial void DeleteFollowUpMaster(FollowUpMaster instance);
  partial void InsertPriceMaster(PriceMaster instance);
  partial void UpdatePriceMaster(PriceMaster instance);
  partial void DeletePriceMaster(PriceMaster instance);
  partial void InsertPriceTypeMaster(PriceTypeMaster instance);
  partial void UpdatePriceTypeMaster(PriceTypeMaster instance);
  partial void DeletePriceTypeMaster(PriceTypeMaster instance);
  partial void InsertProcessMaster(ProcessMaster instance);
  partial void UpdateProcessMaster(ProcessMaster instance);
  partial void DeleteProcessMaster(ProcessMaster instance);
  partial void InsertStateMaster(StateMaster instance);
  partial void UpdateStateMaster(StateMaster instance);
  partial void DeleteStateMaster(StateMaster instance);
  partial void InsertSentEmail(SentEmail instance);
  partial void UpdateSentEmail(SentEmail instance);
  partial void DeleteSentEmail(SentEmail instance);
  partial void InsertEmailConfiguration(EmailConfiguration instance);
  partial void UpdateEmailConfiguration(EmailConfiguration instance);
  partial void DeleteEmailConfiguration(EmailConfiguration instance);
  partial void InsertPriceTypeNew(PriceTypeNew instance);
  partial void UpdatePriceTypeNew(PriceTypeNew instance);
  partial void DeletePriceTypeNew(PriceTypeNew instance);
  partial void InsertProformaInvoiceDetailsMaster(ProformaInvoiceDetailsMaster instance);
  partial void UpdateProformaInvoiceDetailsMaster(ProformaInvoiceDetailsMaster instance);
  partial void DeleteProformaInvoiceDetailsMaster(ProformaInvoiceDetailsMaster instance);
  partial void InsertIndividual_ContactMaster(Individual_ContactMaster instance);
  partial void UpdateIndividual_ContactMaster(Individual_ContactMaster instance);
  partial void DeleteIndividual_ContactMaster(Individual_ContactMaster instance);
  partial void InsertInvoiceDetailsMaster(InvoiceDetailsMaster instance);
  partial void UpdateInvoiceDetailsMaster(InvoiceDetailsMaster instance);
  partial void DeleteInvoiceDetailsMaster(InvoiceDetailsMaster instance);
  partial void InsertPaymentDetailsMaster(PaymentDetailsMaster instance);
  partial void UpdatePaymentDetailsMaster(PaymentDetailsMaster instance);
  partial void DeletePaymentDetailsMaster(PaymentDetailsMaster instance);
  partial void InsertCompanyMaster(CompanyMaster instance);
  partial void UpdateCompanyMaster(CompanyMaster instance);
  partial void DeleteCompanyMaster(CompanyMaster instance);
  partial void InsertInvoiceMaster(InvoiceMaster instance);
  partial void UpdateInvoiceMaster(InvoiceMaster instance);
  partial void DeleteInvoiceMaster(InvoiceMaster instance);
  partial void InsertClientMaster(ClientMaster instance);
  partial void UpdateClientMaster(ClientMaster instance);
  partial void DeleteClientMaster(ClientMaster instance);
  partial void InsertProformaInvoiceMaster(ProformaInvoiceMaster instance);
  partial void UpdateProformaInvoiceMaster(ProformaInvoiceMaster instance);
  partial void DeleteProformaInvoiceMaster(ProformaInvoiceMaster instance);
  partial void InsertUserMaster(UserMaster instance);
  partial void UpdateUserMaster(UserMaster instance);
  partial void DeleteUserMaster(UserMaster instance);
  #endregion
	
	public MITInvoiceDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MITPLInvoiceConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public MITInvoiceDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MITInvoiceDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MITInvoiceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MITInvoiceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<PasswordLink> PasswordLinks
	{
		get
		{
			return this.GetTable<PasswordLink>();
		}
	}
	
	public System.Data.Linq.Table<AttachmentMaster> AttachmentMasters
	{
		get
		{
			return this.GetTable<AttachmentMaster>();
		}
	}
	
	public System.Data.Linq.Table<CityMaster> CityMasters
	{
		get
		{
			return this.GetTable<CityMaster>();
		}
	}
	
	public System.Data.Linq.Table<ClientContactMaster> ClientContactMasters
	{
		get
		{
			return this.GetTable<ClientContactMaster>();
		}
	}
	
	public System.Data.Linq.Table<CountryMaster> CountryMasters
	{
		get
		{
			return this.GetTable<CountryMaster>();
		}
	}
	
	public System.Data.Linq.Table<CurrencyMaster> CurrencyMasters
	{
		get
		{
			return this.GetTable<CurrencyMaster>();
		}
	}
	
	public System.Data.Linq.Table<DepartmentMaster> DepartmentMasters
	{
		get
		{
			return this.GetTable<DepartmentMaster>();
		}
	}
	
	public System.Data.Linq.Table<FollowUpMaster> FollowUpMasters
	{
		get
		{
			return this.GetTable<FollowUpMaster>();
		}
	}
	
	public System.Data.Linq.Table<PriceMaster> PriceMasters
	{
		get
		{
			return this.GetTable<PriceMaster>();
		}
	}
	
	public System.Data.Linq.Table<PriceTypeMaster> PriceTypeMasters
	{
		get
		{
			return this.GetTable<PriceTypeMaster>();
		}
	}
	
	public System.Data.Linq.Table<ProcessMaster> ProcessMasters
	{
		get
		{
			return this.GetTable<ProcessMaster>();
		}
	}
	
	public System.Data.Linq.Table<StateMaster> StateMasters
	{
		get
		{
			return this.GetTable<StateMaster>();
		}
	}
	
	public System.Data.Linq.Table<SentEmail> SentEmails
	{
		get
		{
			return this.GetTable<SentEmail>();
		}
	}
	
	public System.Data.Linq.Table<EmailConfiguration> EmailConfigurations
	{
		get
		{
			return this.GetTable<EmailConfiguration>();
		}
	}
	
	public System.Data.Linq.Table<PriceTypeNew> PriceTypeNews
	{
		get
		{
			return this.GetTable<PriceTypeNew>();
		}
	}
	
	public System.Data.Linq.Table<ProformaInvoiceDetailsMaster> ProformaInvoiceDetailsMasters
	{
		get
		{
			return this.GetTable<ProformaInvoiceDetailsMaster>();
		}
	}
	
	public System.Data.Linq.Table<Individual_ContactMaster> Individual_ContactMasters
	{
		get
		{
			return this.GetTable<Individual_ContactMaster>();
		}
	}
	
	public System.Data.Linq.Table<InvoiceDetailsMaster> InvoiceDetailsMasters
	{
		get
		{
			return this.GetTable<InvoiceDetailsMaster>();
		}
	}
	
	public System.Data.Linq.Table<PaymentDetailsMaster> PaymentDetailsMasters
	{
		get
		{
			return this.GetTable<PaymentDetailsMaster>();
		}
	}
	
	public System.Data.Linq.Table<CompanyMaster> CompanyMasters
	{
		get
		{
			return this.GetTable<CompanyMaster>();
		}
	}
	
	public System.Data.Linq.Table<InvoiceMaster> InvoiceMasters
	{
		get
		{
			return this.GetTable<InvoiceMaster>();
		}
	}
	
	public System.Data.Linq.Table<ClientMaster> ClientMasters
	{
		get
		{
			return this.GetTable<ClientMaster>();
		}
	}
	
	public System.Data.Linq.Table<ProformaInvoiceMaster> ProformaInvoiceMasters
	{
		get
		{
			return this.GetTable<ProformaInvoiceMaster>();
		}
	}
	
	public System.Data.Linq.Table<UserMaster> UserMasters
	{
		get
		{
			return this.GetTable<UserMaster>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PasswordLink")]
public partial class PasswordLink : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _PasswordLink1;
	
	private System.Nullable<long> _EmpCode;
	
	private System.Nullable<bool> _IsUsed;
	
	private System.Nullable<System.DateTime> _DateCreated;
	
	private System.Nullable<System.DateTime> _DateUsed;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPasswordLink1Changing(string value);
    partial void OnPasswordLink1Changed();
    partial void OnEmpCodeChanging(System.Nullable<long> value);
    partial void OnEmpCodeChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateUsedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUsedChanged();
    #endregion
	
	public PasswordLink()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordLink1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string PasswordLink1
	{
		get
		{
			return this._PasswordLink1;
		}
		set
		{
			if ((this._PasswordLink1 != value))
			{
				this.OnPasswordLink1Changing(value);
				this.SendPropertyChanging();
				this._PasswordLink1 = value;
				this.SendPropertyChanged("PasswordLink1");
				this.OnPasswordLink1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpCode", DbType="BigInt")]
	public System.Nullable<long> EmpCode
	{
		get
		{
			return this._EmpCode;
		}
		set
		{
			if ((this._EmpCode != value))
			{
				this.OnEmpCodeChanging(value);
				this.SendPropertyChanging();
				this._EmpCode = value;
				this.SendPropertyChanged("EmpCode");
				this.OnEmpCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
	public System.Nullable<bool> IsUsed
	{
		get
		{
			return this._IsUsed;
		}
		set
		{
			if ((this._IsUsed != value))
			{
				this.OnIsUsedChanging(value);
				this.SendPropertyChanging();
				this._IsUsed = value;
				this.SendPropertyChanged("IsUsed");
				this.OnIsUsedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUsed", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateUsed
	{
		get
		{
			return this._DateUsed;
		}
		set
		{
			if ((this._DateUsed != value))
			{
				this.OnDateUsedChanging(value);
				this.SendPropertyChanging();
				this._DateUsed = value;
				this.SendPropertyChanged("DateUsed");
				this.OnDateUsedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttachmentMaster")]
public partial class AttachmentMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _AttachmentId;
	
	private long _InvoiceId;
	
	private string _AttachmentName;
	
	private bool _IsInvoice;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private EntityRef<InvoiceMaster> _InvoiceMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentIdChanging(long value);
    partial void OnAttachmentIdChanged();
    partial void OnInvoiceIdChanging(long value);
    partial void OnInvoiceIdChanged();
    partial void OnAttachmentNameChanging(string value);
    partial void OnAttachmentNameChanged();
    partial void OnIsInvoiceChanging(bool value);
    partial void OnIsInvoiceChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public AttachmentMaster()
	{
		this._InvoiceMaster = default(EntityRef<InvoiceMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long AttachmentId
	{
		get
		{
			return this._AttachmentId;
		}
		set
		{
			if ((this._AttachmentId != value))
			{
				this.OnAttachmentIdChanging(value);
				this.SendPropertyChanging();
				this._AttachmentId = value;
				this.SendPropertyChanged("AttachmentId");
				this.OnAttachmentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="BigInt NOT NULL")]
	public long InvoiceId
	{
		get
		{
			return this._InvoiceId;
		}
		set
		{
			if ((this._InvoiceId != value))
			{
				if (this._InvoiceMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnInvoiceIdChanging(value);
				this.SendPropertyChanging();
				this._InvoiceId = value;
				this.SendPropertyChanged("InvoiceId");
				this.OnInvoiceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string AttachmentName
	{
		get
		{
			return this._AttachmentName;
		}
		set
		{
			if ((this._AttachmentName != value))
			{
				this.OnAttachmentNameChanging(value);
				this.SendPropertyChanging();
				this._AttachmentName = value;
				this.SendPropertyChanged("AttachmentName");
				this.OnAttachmentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoice", DbType="Bit NOT NULL")]
	public bool IsInvoice
	{
		get
		{
			return this._IsInvoice;
		}
		set
		{
			if ((this._IsInvoice != value))
			{
				this.OnIsInvoiceChanging(value);
				this.SendPropertyChanging();
				this._IsInvoice = value;
				this.SendPropertyChanged("IsInvoice");
				this.OnIsInvoiceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_AttachmentMaster", Storage="_InvoiceMaster", ThisKey="InvoiceId", OtherKey="InvoiceId", IsForeignKey=true)]
	public InvoiceMaster InvoiceMaster
	{
		get
		{
			return this._InvoiceMaster.Entity;
		}
		set
		{
			InvoiceMaster previousValue = this._InvoiceMaster.Entity;
			if (((previousValue != value) 
						|| (this._InvoiceMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._InvoiceMaster.Entity = null;
					previousValue.AttachmentMasters.Remove(this);
				}
				this._InvoiceMaster.Entity = value;
				if ((value != null))
				{
					value.AttachmentMasters.Add(this);
					this._InvoiceId = value.InvoiceId;
				}
				else
				{
					this._InvoiceId = default(long);
				}
				this.SendPropertyChanged("InvoiceMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_AttachmentMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.AttachmentMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.AttachmentMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityMaster")]
public partial class CityMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _CityId;
	
	private long _StateId;
	
	private long _CountryId;
	
	private string _CityName;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private EntitySet<ClientMaster> _ClientMasters;
	
	private EntitySet<ClientMaster> _ClientMasters1;
	
	private EntityRef<CountryMaster> _CountryMaster;
	
	private EntityRef<StateMaster> _StateMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIdChanging(long value);
    partial void OnCityIdChanged();
    partial void OnStateIdChanging(long value);
    partial void OnStateIdChanged();
    partial void OnCountryIdChanging(long value);
    partial void OnCountryIdChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
	
	public CityMaster()
	{
		this._ClientMasters = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters), new Action<ClientMaster>(this.detach_ClientMasters));
		this._ClientMasters1 = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters1), new Action<ClientMaster>(this.detach_ClientMasters1));
		this._CountryMaster = default(EntityRef<CountryMaster>);
		this._StateMaster = default(EntityRef<StateMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				this.OnCityIdChanging(value);
				this.SendPropertyChanging();
				this._CityId = value;
				this.SendPropertyChanged("CityId");
				this.OnCityIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="BigInt NOT NULL")]
	public long StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				if (this._StateMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStateIdChanging(value);
				this.SendPropertyChanging();
				this._StateId = value;
				this.SendPropertyChanged("StateId");
				this.OnStateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="BigInt NOT NULL")]
	public long CountryId
	{
		get
		{
			return this._CountryId;
		}
		set
		{
			if ((this._CountryId != value))
			{
				if (this._CountryMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCountryIdChanging(value);
				this.SendPropertyChanging();
				this._CountryId = value;
				this.SendPropertyChanged("CountryId");
				this.OnCountryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string CityName
	{
		get
		{
			return this._CityName;
		}
		set
		{
			if ((this._CityName != value))
			{
				this.OnCityNameChanging(value);
				this.SendPropertyChanging();
				this._CityName = value;
				this.SendPropertyChanged("CityName");
				this.OnCityNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityMaster_ClientMaster", Storage="_ClientMasters", ThisKey="CityId", OtherKey="City1")]
	public EntitySet<ClientMaster> ClientMasters
	{
		get
		{
			return this._ClientMasters;
		}
		set
		{
			this._ClientMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityMaster_ClientMaster1", Storage="_ClientMasters1", ThisKey="CityId", OtherKey="City2")]
	public EntitySet<ClientMaster> ClientMasters1
	{
		get
		{
			return this._ClientMasters1;
		}
		set
		{
			this._ClientMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_CityMaster", Storage="_CountryMaster", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
	public CountryMaster CountryMaster
	{
		get
		{
			return this._CountryMaster.Entity;
		}
		set
		{
			CountryMaster previousValue = this._CountryMaster.Entity;
			if (((previousValue != value) 
						|| (this._CountryMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CountryMaster.Entity = null;
					previousValue.CityMasters.Remove(this);
				}
				this._CountryMaster.Entity = value;
				if ((value != null))
				{
					value.CityMasters.Add(this);
					this._CountryId = value.CountryId;
				}
				else
				{
					this._CountryId = default(long);
				}
				this.SendPropertyChanged("CountryMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CityMaster", Storage="_StateMaster", ThisKey="StateId", OtherKey="StateId", IsForeignKey=true)]
	public StateMaster StateMaster
	{
		get
		{
			return this._StateMaster.Entity;
		}
		set
		{
			StateMaster previousValue = this._StateMaster.Entity;
			if (((previousValue != value) 
						|| (this._StateMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StateMaster.Entity = null;
					previousValue.CityMasters.Remove(this);
				}
				this._StateMaster.Entity = value;
				if ((value != null))
				{
					value.CityMasters.Add(this);
					this._StateId = value.StateId;
				}
				else
				{
					this._StateId = default(long);
				}
				this.SendPropertyChanged("StateMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CityMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.CityMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.CityMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CityMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.CityMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.CityMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.CityMaster = this;
	}
	
	private void detach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.CityMaster = null;
	}
	
	private void attach_ClientMasters1(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.CityMaster1 = this;
	}
	
	private void detach_ClientMasters1(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.CityMaster1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientContactMaster")]
public partial class ClientContactMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ClientContactId;
	
	private long _ClientId;
	
	private string _Name;
	
	private string _ContactNumber;
	
	private string _EmailAddress;
	
	private bool _IsDeleted;
	
	private System.Nullable<long> _CratedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDtae;
	
	private EntityRef<ClientMaster> _ClientMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientContactIdChanging(long value);
    partial void OnClientContactIdChanged();
    partial void OnClientIdChanging(long value);
    partial void OnClientIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCratedByChanging(System.Nullable<long> value);
    partial void OnCratedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDtaeChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDtaeChanged();
    #endregion
	
	public ClientContactMaster()
	{
		this._ClientMaster = default(EntityRef<ClientMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientContactId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ClientContactId
	{
		get
		{
			return this._ClientContactId;
		}
		set
		{
			if ((this._ClientContactId != value))
			{
				this.OnClientContactIdChanging(value);
				this.SendPropertyChanging();
				this._ClientContactId = value;
				this.SendPropertyChanged("ClientContactId");
				this.OnClientContactIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="BigInt NOT NULL")]
	public long ClientId
	{
		get
		{
			return this._ClientId;
		}
		set
		{
			if ((this._ClientId != value))
			{
				if (this._ClientMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnClientIdChanging(value);
				this.SendPropertyChanging();
				this._ClientId = value;
				this.SendPropertyChanged("ClientId");
				this.OnClientIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="VarChar(15)")]
	public string ContactNumber
	{
		get
		{
			return this._ContactNumber;
		}
		set
		{
			if ((this._ContactNumber != value))
			{
				this.OnContactNumberChanging(value);
				this.SendPropertyChanging();
				this._ContactNumber = value;
				this.SendPropertyChanged("ContactNumber");
				this.OnContactNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string EmailAddress
	{
		get
		{
			return this._EmailAddress;
		}
		set
		{
			if ((this._EmailAddress != value))
			{
				this.OnEmailAddressChanging(value);
				this.SendPropertyChanging();
				this._EmailAddress = value;
				this.SendPropertyChanged("EmailAddress");
				this.OnEmailAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
	public bool IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CratedBy", DbType="BigInt")]
	public System.Nullable<long> CratedBy
	{
		get
		{
			return this._CratedBy;
		}
		set
		{
			if ((this._CratedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCratedByChanging(value);
				this.SendPropertyChanging();
				this._CratedBy = value;
				this.SendPropertyChanged("CratedBy");
				this.OnCratedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDtae", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDtae
	{
		get
		{
			return this._ModifyDtae;
		}
		set
		{
			if ((this._ModifyDtae != value))
			{
				this.OnModifyDtaeChanging(value);
				this.SendPropertyChanging();
				this._ModifyDtae = value;
				this.SendPropertyChanged("ModifyDtae");
				this.OnModifyDtaeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_ClientContactMaster", Storage="_ClientMaster", ThisKey="ClientId", OtherKey="ClientId", IsForeignKey=true)]
	public ClientMaster ClientMaster
	{
		get
		{
			return this._ClientMaster.Entity;
		}
		set
		{
			ClientMaster previousValue = this._ClientMaster.Entity;
			if (((previousValue != value) 
						|| (this._ClientMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ClientMaster.Entity = null;
					previousValue.ClientContactMasters.Remove(this);
				}
				this._ClientMaster.Entity = value;
				if ((value != null))
				{
					value.ClientContactMasters.Add(this);
					this._ClientId = value.ClientId;
				}
				else
				{
					this._ClientId = default(long);
				}
				this.SendPropertyChanged("ClientMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ClientContactMaster", Storage="_UserMaster", ThisKey="CratedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.ClientContactMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.ClientContactMasters.Add(this);
					this._CratedBy = value.UserId;
				}
				else
				{
					this._CratedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ClientContactMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.ClientContactMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.ClientContactMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountryMaster")]
public partial class CountryMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _CountryId;
	
	private string _CountryName;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private EntitySet<CityMaster> _CityMasters;
	
	private EntitySet<StateMaster> _StateMasters;
	
	private EntitySet<ClientMaster> _ClientMasters;
	
	private EntitySet<ClientMaster> _ClientMasters1;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIdChanging(long value);
    partial void OnCountryIdChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
	
	public CountryMaster()
	{
		this._CityMasters = new EntitySet<CityMaster>(new Action<CityMaster>(this.attach_CityMasters), new Action<CityMaster>(this.detach_CityMasters));
		this._StateMasters = new EntitySet<StateMaster>(new Action<StateMaster>(this.attach_StateMasters), new Action<StateMaster>(this.detach_StateMasters));
		this._ClientMasters = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters), new Action<ClientMaster>(this.detach_ClientMasters));
		this._ClientMasters1 = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters1), new Action<ClientMaster>(this.detach_ClientMasters1));
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long CountryId
	{
		get
		{
			return this._CountryId;
		}
		set
		{
			if ((this._CountryId != value))
			{
				this.OnCountryIdChanging(value);
				this.SendPropertyChanging();
				this._CountryId = value;
				this.SendPropertyChanged("CountryId");
				this.OnCountryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string CountryName
	{
		get
		{
			return this._CountryName;
		}
		set
		{
			if ((this._CountryName != value))
			{
				this.OnCountryNameChanging(value);
				this.SendPropertyChanging();
				this._CountryName = value;
				this.SendPropertyChanged("CountryName");
				this.OnCountryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_CityMaster", Storage="_CityMasters", ThisKey="CountryId", OtherKey="CountryId")]
	public EntitySet<CityMaster> CityMasters
	{
		get
		{
			return this._CityMasters;
		}
		set
		{
			this._CityMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_StateMaster", Storage="_StateMasters", ThisKey="CountryId", OtherKey="CountryId")]
	public EntitySet<StateMaster> StateMasters
	{
		get
		{
			return this._StateMasters;
		}
		set
		{
			this._StateMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_ClientMaster", Storage="_ClientMasters", ThisKey="CountryId", OtherKey="Country1")]
	public EntitySet<ClientMaster> ClientMasters
	{
		get
		{
			return this._ClientMasters;
		}
		set
		{
			this._ClientMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_ClientMaster1", Storage="_ClientMasters1", ThisKey="CountryId", OtherKey="Country2")]
	public EntitySet<ClientMaster> ClientMasters1
	{
		get
		{
			return this._ClientMasters1;
		}
		set
		{
			this._ClientMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CountryMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.CountryMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.CountryMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CountryMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.CountryMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.CountryMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = this;
	}
	
	private void detach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = null;
	}
	
	private void attach_StateMasters(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = this;
	}
	
	private void detach_StateMasters(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = null;
	}
	
	private void attach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = this;
	}
	
	private void detach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = null;
	}
	
	private void attach_ClientMasters1(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster1 = this;
	}
	
	private void detach_ClientMasters1(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyMaster")]
public partial class CurrencyMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _CurrencyId;
	
	private string _CurrencyName;
	
	private string _CurrencyCode;
	
	private string _CurrencySymbol;
	
	private bool _IsDeleted;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private EntitySet<CompanyMaster> _CompanyMasters;
	
	private EntitySet<ClientMaster> _ClientMasters;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyIdChanging(long value);
    partial void OnCurrencyIdChanged();
    partial void OnCurrencyNameChanging(string value);
    partial void OnCurrencyNameChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnCurrencySymbolChanging(string value);
    partial void OnCurrencySymbolChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
	
	public CurrencyMaster()
	{
		this._CompanyMasters = new EntitySet<CompanyMaster>(new Action<CompanyMaster>(this.attach_CompanyMasters), new Action<CompanyMaster>(this.detach_CompanyMasters));
		this._ClientMasters = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters), new Action<ClientMaster>(this.detach_ClientMasters));
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long CurrencyId
	{
		get
		{
			return this._CurrencyId;
		}
		set
		{
			if ((this._CurrencyId != value))
			{
				this.OnCurrencyIdChanging(value);
				this.SendPropertyChanging();
				this._CurrencyId = value;
				this.SendPropertyChanged("CurrencyId");
				this.OnCurrencyIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string CurrencyName
	{
		get
		{
			return this._CurrencyName;
		}
		set
		{
			if ((this._CurrencyName != value))
			{
				this.OnCurrencyNameChanging(value);
				this.SendPropertyChanging();
				this._CurrencyName = value;
				this.SendPropertyChanged("CurrencyName");
				this.OnCurrencyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
	public string CurrencyCode
	{
		get
		{
			return this._CurrencyCode;
		}
		set
		{
			if ((this._CurrencyCode != value))
			{
				this.OnCurrencyCodeChanging(value);
				this.SendPropertyChanging();
				this._CurrencyCode = value;
				this.SendPropertyChanged("CurrencyCode");
				this.OnCurrencyCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySymbol", DbType="NVarChar(50)")]
	public string CurrencySymbol
	{
		get
		{
			return this._CurrencySymbol;
		}
		set
		{
			if ((this._CurrencySymbol != value))
			{
				this.OnCurrencySymbolChanging(value);
				this.SendPropertyChanging();
				this._CurrencySymbol = value;
				this.SendPropertyChanged("CurrencySymbol");
				this.OnCurrencySymbolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
	public bool IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyMaster_CompanyMaster", Storage="_CompanyMasters", ThisKey="CurrencyId", OtherKey="CurrencyType")]
	public EntitySet<CompanyMaster> CompanyMasters
	{
		get
		{
			return this._CompanyMasters;
		}
		set
		{
			this._CompanyMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyMaster_ClientMaster", Storage="_ClientMasters", ThisKey="CurrencyId", OtherKey="CurrencyId")]
	public EntitySet<ClientMaster> ClientMasters
	{
		get
		{
			return this._ClientMasters;
		}
		set
		{
			this._ClientMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CurrencyMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.CurrencyMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.CurrencyMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CurrencyMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.CurrencyMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.CurrencyMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CompanyMasters(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.CurrencyMaster = this;
	}
	
	private void detach_CompanyMasters(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.CurrencyMaster = null;
	}
	
	private void attach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.CurrencyMaster = this;
	}
	
	private void detach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.CurrencyMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentMaster")]
public partial class DepartmentMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _DepartmentId;
	
	private string _DepartmentName;
	
	private System.Nullable<long> _UserId;
	
	private bool _IsActive;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private EntitySet<ProcessMaster> _ProcessMasters;
	
	private EntitySet<CompanyMaster> _CompanyMasters;
	
	private EntitySet<ClientMaster> _ClientMasters;
	
	private EntitySet<UserMaster> _UserMasters;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
	private EntityRef<UserMaster> _UserMaster2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIdChanging(long value);
    partial void OnDepartmentIdChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
	
	public DepartmentMaster()
	{
		this._ProcessMasters = new EntitySet<ProcessMaster>(new Action<ProcessMaster>(this.attach_ProcessMasters), new Action<ProcessMaster>(this.detach_ProcessMasters));
		this._CompanyMasters = new EntitySet<CompanyMaster>(new Action<CompanyMaster>(this.attach_CompanyMasters), new Action<CompanyMaster>(this.detach_CompanyMasters));
		this._ClientMasters = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters), new Action<ClientMaster>(this.detach_ClientMasters));
		this._UserMasters = new EntitySet<UserMaster>(new Action<UserMaster>(this.attach_UserMasters), new Action<UserMaster>(this.detach_UserMasters));
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		this._UserMaster2 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long DepartmentId
	{
		get
		{
			return this._DepartmentId;
		}
		set
		{
			if ((this._DepartmentId != value))
			{
				this.OnDepartmentIdChanging(value);
				this.SendPropertyChanging();
				this._DepartmentId = value;
				this.SendPropertyChanged("DepartmentId");
				this.OnDepartmentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string DepartmentName
	{
		get
		{
			return this._DepartmentName;
		}
		set
		{
			if ((this._DepartmentName != value))
			{
				this.OnDepartmentNameChanging(value);
				this.SendPropertyChanging();
				this._DepartmentName = value;
				this.SendPropertyChanged("DepartmentName");
				this.OnDepartmentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
	public System.Nullable<long> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentMaster_ProcessMaster", Storage="_ProcessMasters", ThisKey="DepartmentId", OtherKey="DepartmentId")]
	public EntitySet<ProcessMaster> ProcessMasters
	{
		get
		{
			return this._ProcessMasters;
		}
		set
		{
			this._ProcessMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentMaster_CompanyMaster", Storage="_CompanyMasters", ThisKey="DepartmentId", OtherKey="DepartmentID")]
	public EntitySet<CompanyMaster> CompanyMasters
	{
		get
		{
			return this._CompanyMasters;
		}
		set
		{
			this._CompanyMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentMaster_ClientMaster", Storage="_ClientMasters", ThisKey="DepartmentId", OtherKey="DepartmentId")]
	public EntitySet<ClientMaster> ClientMasters
	{
		get
		{
			return this._ClientMasters;
		}
		set
		{
			this._ClientMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentMaster_UserMaster", Storage="_UserMasters", ThisKey="DepartmentId", OtherKey="DepartmentId")]
	public EntitySet<UserMaster> UserMasters
	{
		get
		{
			return this._UserMasters;
		}
		set
		{
			this._UserMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_DepartmentMaster", Storage="_UserMaster", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.DepartmentMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.DepartmentMasters.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_DepartmentMaster1", Storage="_UserMaster1", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.DepartmentMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.DepartmentMasters1.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_DepartmentMaster2", Storage="_UserMaster2", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster2
	{
		get
		{
			return this._UserMaster2.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster2.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster2.Entity = null;
					previousValue.DepartmentMasters2.Remove(this);
				}
				this._UserMaster2.Entity = value;
				if ((value != null))
				{
					value.DepartmentMasters2.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster2");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ProcessMasters(ProcessMaster entity)
	{
		this.SendPropertyChanging();
		entity.DepartmentMaster = this;
	}
	
	private void detach_ProcessMasters(ProcessMaster entity)
	{
		this.SendPropertyChanging();
		entity.DepartmentMaster = null;
	}
	
	private void attach_CompanyMasters(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.DepartmentMaster = this;
	}
	
	private void detach_CompanyMasters(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.DepartmentMaster = null;
	}
	
	private void attach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.DepartmentMaster = this;
	}
	
	private void detach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.DepartmentMaster = null;
	}
	
	private void attach_UserMasters(UserMaster entity)
	{
		this.SendPropertyChanging();
		entity.DepartmentMaster = this;
	}
	
	private void detach_UserMasters(UserMaster entity)
	{
		this.SendPropertyChanging();
		entity.DepartmentMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FollowUpMaster")]
public partial class FollowUpMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _FollowId;
	
	private long _InvoiceId;
	
	private System.DateTime _FollowUpDate;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private EntityRef<InvoiceMaster> _InvoiceMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFollowIdChanging(long value);
    partial void OnFollowIdChanged();
    partial void OnInvoiceIdChanging(long value);
    partial void OnInvoiceIdChanged();
    partial void OnFollowUpDateChanging(System.DateTime value);
    partial void OnFollowUpDateChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public FollowUpMaster()
	{
		this._InvoiceMaster = default(EntityRef<InvoiceMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long FollowId
	{
		get
		{
			return this._FollowId;
		}
		set
		{
			if ((this._FollowId != value))
			{
				this.OnFollowIdChanging(value);
				this.SendPropertyChanging();
				this._FollowId = value;
				this.SendPropertyChanged("FollowId");
				this.OnFollowIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="BigInt NOT NULL")]
	public long InvoiceId
	{
		get
		{
			return this._InvoiceId;
		}
		set
		{
			if ((this._InvoiceId != value))
			{
				if (this._InvoiceMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnInvoiceIdChanging(value);
				this.SendPropertyChanging();
				this._InvoiceId = value;
				this.SendPropertyChanged("InvoiceId");
				this.OnInvoiceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpDate", DbType="DateTime NOT NULL")]
	public System.DateTime FollowUpDate
	{
		get
		{
			return this._FollowUpDate;
		}
		set
		{
			if ((this._FollowUpDate != value))
			{
				this.OnFollowUpDateChanging(value);
				this.SendPropertyChanging();
				this._FollowUpDate = value;
				this.SendPropertyChanged("FollowUpDate");
				this.OnFollowUpDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_FollowUpMaster", Storage="_InvoiceMaster", ThisKey="InvoiceId", OtherKey="InvoiceId", IsForeignKey=true)]
	public InvoiceMaster InvoiceMaster
	{
		get
		{
			return this._InvoiceMaster.Entity;
		}
		set
		{
			InvoiceMaster previousValue = this._InvoiceMaster.Entity;
			if (((previousValue != value) 
						|| (this._InvoiceMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._InvoiceMaster.Entity = null;
					previousValue.FollowUpMasters.Remove(this);
				}
				this._InvoiceMaster.Entity = value;
				if ((value != null))
				{
					value.FollowUpMasters.Add(this);
					this._InvoiceId = value.InvoiceId;
				}
				else
				{
					this._InvoiceId = default(long);
				}
				this.SendPropertyChanged("InvoiceMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_FollowUpMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.FollowUpMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.FollowUpMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceMaster")]
public partial class PriceMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _PriceId;
	
	private long _ClientId;
	
	private long _PriceTypeId;
	
	private long _ProcessId;
	
	private decimal _UnitPrice;
	
	private bool _IsDeleted;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private EntityRef<PriceTypeMaster> _PriceTypeMaster;
	
	private EntityRef<ProcessMaster> _ProcessMaster;
	
	private EntityRef<ClientMaster> _ClientMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceIdChanging(long value);
    partial void OnPriceIdChanged();
    partial void OnClientIdChanging(long value);
    partial void OnClientIdChanged();
    partial void OnPriceTypeIdChanging(long value);
    partial void OnPriceTypeIdChanged();
    partial void OnProcessIdChanging(long value);
    partial void OnProcessIdChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
	
	public PriceMaster()
	{
		this._PriceTypeMaster = default(EntityRef<PriceTypeMaster>);
		this._ProcessMaster = default(EntityRef<ProcessMaster>);
		this._ClientMaster = default(EntityRef<ClientMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long PriceId
	{
		get
		{
			return this._PriceId;
		}
		set
		{
			if ((this._PriceId != value))
			{
				this.OnPriceIdChanging(value);
				this.SendPropertyChanging();
				this._PriceId = value;
				this.SendPropertyChanged("PriceId");
				this.OnPriceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="BigInt NOT NULL")]
	public long ClientId
	{
		get
		{
			return this._ClientId;
		}
		set
		{
			if ((this._ClientId != value))
			{
				if (this._ClientMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnClientIdChanging(value);
				this.SendPropertyChanging();
				this._ClientId = value;
				this.SendPropertyChanged("ClientId");
				this.OnClientIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTypeId", DbType="BigInt NOT NULL")]
	public long PriceTypeId
	{
		get
		{
			return this._PriceTypeId;
		}
		set
		{
			if ((this._PriceTypeId != value))
			{
				if (this._PriceTypeMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPriceTypeIdChanging(value);
				this.SendPropertyChanging();
				this._PriceTypeId = value;
				this.SendPropertyChanged("PriceTypeId");
				this.OnPriceTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="BigInt NOT NULL")]
	public long ProcessId
	{
		get
		{
			return this._ProcessId;
		}
		set
		{
			if ((this._ProcessId != value))
			{
				if (this._ProcessMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProcessIdChanging(value);
				this.SendPropertyChanging();
				this._ProcessId = value;
				this.SendPropertyChanged("ProcessId");
				this.OnProcessIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(6,2) NOT NULL")]
	public decimal UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
	public bool IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceTypeMaster_PriceMaster", Storage="_PriceTypeMaster", ThisKey="PriceTypeId", OtherKey="PriceTypeId", IsForeignKey=true)]
	public PriceTypeMaster PriceTypeMaster
	{
		get
		{
			return this._PriceTypeMaster.Entity;
		}
		set
		{
			PriceTypeMaster previousValue = this._PriceTypeMaster.Entity;
			if (((previousValue != value) 
						|| (this._PriceTypeMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PriceTypeMaster.Entity = null;
					previousValue.PriceMasters.Remove(this);
				}
				this._PriceTypeMaster.Entity = value;
				if ((value != null))
				{
					value.PriceMasters.Add(this);
					this._PriceTypeId = value.PriceTypeId;
				}
				else
				{
					this._PriceTypeId = default(long);
				}
				this.SendPropertyChanged("PriceTypeMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProcessMaster_PriceMaster", Storage="_ProcessMaster", ThisKey="ProcessId", OtherKey="ProcessId", IsForeignKey=true)]
	public ProcessMaster ProcessMaster
	{
		get
		{
			return this._ProcessMaster.Entity;
		}
		set
		{
			ProcessMaster previousValue = this._ProcessMaster.Entity;
			if (((previousValue != value) 
						|| (this._ProcessMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProcessMaster.Entity = null;
					previousValue.PriceMasters.Remove(this);
				}
				this._ProcessMaster.Entity = value;
				if ((value != null))
				{
					value.PriceMasters.Add(this);
					this._ProcessId = value.ProcessId;
				}
				else
				{
					this._ProcessId = default(long);
				}
				this.SendPropertyChanged("ProcessMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_PriceMaster", Storage="_ClientMaster", ThisKey="ClientId", OtherKey="ClientId", IsForeignKey=true)]
	public ClientMaster ClientMaster
	{
		get
		{
			return this._ClientMaster.Entity;
		}
		set
		{
			ClientMaster previousValue = this._ClientMaster.Entity;
			if (((previousValue != value) 
						|| (this._ClientMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ClientMaster.Entity = null;
					previousValue.PriceMasters.Remove(this);
				}
				this._ClientMaster.Entity = value;
				if ((value != null))
				{
					value.PriceMasters.Add(this);
					this._ClientId = value.ClientId;
				}
				else
				{
					this._ClientId = default(long);
				}
				this.SendPropertyChanged("ClientMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.PriceMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.PriceMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.PriceMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.PriceMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceTypeMaster")]
public partial class PriceTypeMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _PriceTypeId;
	
	private string _PriceType;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private EntitySet<PriceMaster> _PriceMasters;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceTypeIdChanging(long value);
    partial void OnPriceTypeIdChanged();
    partial void OnPriceTypeChanging(string value);
    partial void OnPriceTypeChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
	
	public PriceTypeMaster()
	{
		this._PriceMasters = new EntitySet<PriceMaster>(new Action<PriceMaster>(this.attach_PriceMasters), new Action<PriceMaster>(this.detach_PriceMasters));
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTypeId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long PriceTypeId
	{
		get
		{
			return this._PriceTypeId;
		}
		set
		{
			if ((this._PriceTypeId != value))
			{
				this.OnPriceTypeIdChanging(value);
				this.SendPropertyChanging();
				this._PriceTypeId = value;
				this.SendPropertyChanged("PriceTypeId");
				this.OnPriceTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string PriceType
	{
		get
		{
			return this._PriceType;
		}
		set
		{
			if ((this._PriceType != value))
			{
				this.OnPriceTypeChanging(value);
				this.SendPropertyChanging();
				this._PriceType = value;
				this.SendPropertyChanged("PriceType");
				this.OnPriceTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceTypeMaster_PriceMaster", Storage="_PriceMasters", ThisKey="PriceTypeId", OtherKey="PriceTypeId")]
	public EntitySet<PriceMaster> PriceMasters
	{
		get
		{
			return this._PriceMasters;
		}
		set
		{
			this._PriceMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceTypeMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.PriceTypeMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.PriceTypeMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceTypeMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.PriceTypeMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.PriceTypeMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PriceMasters(PriceMaster entity)
	{
		this.SendPropertyChanging();
		entity.PriceTypeMaster = this;
	}
	
	private void detach_PriceMasters(PriceMaster entity)
	{
		this.SendPropertyChanging();
		entity.PriceTypeMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProcessMaster")]
public partial class ProcessMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ProcessId;
	
	private string _ProcessName;
	
	private long _DepartmentId;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private EntitySet<PriceMaster> _PriceMasters;
	
	private EntityRef<DepartmentMaster> _DepartmentMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessIdChanging(long value);
    partial void OnProcessIdChanged();
    partial void OnProcessNameChanging(string value);
    partial void OnProcessNameChanged();
    partial void OnDepartmentIdChanging(long value);
    partial void OnDepartmentIdChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
	
	public ProcessMaster()
	{
		this._PriceMasters = new EntitySet<PriceMaster>(new Action<PriceMaster>(this.attach_PriceMasters), new Action<PriceMaster>(this.detach_PriceMasters));
		this._DepartmentMaster = default(EntityRef<DepartmentMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ProcessId
	{
		get
		{
			return this._ProcessId;
		}
		set
		{
			if ((this._ProcessId != value))
			{
				this.OnProcessIdChanging(value);
				this.SendPropertyChanging();
				this._ProcessId = value;
				this.SendPropertyChanged("ProcessId");
				this.OnProcessIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ProcessName
	{
		get
		{
			return this._ProcessName;
		}
		set
		{
			if ((this._ProcessName != value))
			{
				this.OnProcessNameChanging(value);
				this.SendPropertyChanging();
				this._ProcessName = value;
				this.SendPropertyChanged("ProcessName");
				this.OnProcessNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt NOT NULL")]
	public long DepartmentId
	{
		get
		{
			return this._DepartmentId;
		}
		set
		{
			if ((this._DepartmentId != value))
			{
				if (this._DepartmentMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDepartmentIdChanging(value);
				this.SendPropertyChanging();
				this._DepartmentId = value;
				this.SendPropertyChanged("DepartmentId");
				this.OnDepartmentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProcessMaster_PriceMaster", Storage="_PriceMasters", ThisKey="ProcessId", OtherKey="ProcessId")]
	public EntitySet<PriceMaster> PriceMasters
	{
		get
		{
			return this._PriceMasters;
		}
		set
		{
			this._PriceMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentMaster_ProcessMaster", Storage="_DepartmentMaster", ThisKey="DepartmentId", OtherKey="DepartmentId", IsForeignKey=true)]
	public DepartmentMaster DepartmentMaster
	{
		get
		{
			return this._DepartmentMaster.Entity;
		}
		set
		{
			DepartmentMaster previousValue = this._DepartmentMaster.Entity;
			if (((previousValue != value) 
						|| (this._DepartmentMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DepartmentMaster.Entity = null;
					previousValue.ProcessMasters.Remove(this);
				}
				this._DepartmentMaster.Entity = value;
				if ((value != null))
				{
					value.ProcessMasters.Add(this);
					this._DepartmentId = value.DepartmentId;
				}
				else
				{
					this._DepartmentId = default(long);
				}
				this.SendPropertyChanged("DepartmentMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProcessMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.ProcessMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.ProcessMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProcessMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.ProcessMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.ProcessMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PriceMasters(PriceMaster entity)
	{
		this.SendPropertyChanging();
		entity.ProcessMaster = this;
	}
	
	private void detach_PriceMasters(PriceMaster entity)
	{
		this.SendPropertyChanging();
		entity.ProcessMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StateMaster")]
public partial class StateMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _StateId;
	
	private long _CountryId;
	
	private string _StateName;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private EntitySet<CityMaster> _CityMasters;
	
	private EntitySet<ClientMaster> _ClientMasters;
	
	private EntitySet<ClientMaster> _ClientMasters1;
	
	private EntityRef<CountryMaster> _CountryMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIdChanging(long value);
    partial void OnStateIdChanged();
    partial void OnCountryIdChanging(long value);
    partial void OnCountryIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
	
	public StateMaster()
	{
		this._CityMasters = new EntitySet<CityMaster>(new Action<CityMaster>(this.attach_CityMasters), new Action<CityMaster>(this.detach_CityMasters));
		this._ClientMasters = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters), new Action<ClientMaster>(this.detach_ClientMasters));
		this._ClientMasters1 = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters1), new Action<ClientMaster>(this.detach_ClientMasters1));
		this._CountryMaster = default(EntityRef<CountryMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				this.OnStateIdChanging(value);
				this.SendPropertyChanging();
				this._StateId = value;
				this.SendPropertyChanged("StateId");
				this.OnStateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="BigInt NOT NULL")]
	public long CountryId
	{
		get
		{
			return this._CountryId;
		}
		set
		{
			if ((this._CountryId != value))
			{
				if (this._CountryMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCountryIdChanging(value);
				this.SendPropertyChanging();
				this._CountryId = value;
				this.SendPropertyChanged("CountryId");
				this.OnCountryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string StateName
	{
		get
		{
			return this._StateName;
		}
		set
		{
			if ((this._StateName != value))
			{
				this.OnStateNameChanging(value);
				this.SendPropertyChanging();
				this._StateName = value;
				this.SendPropertyChanged("StateName");
				this.OnStateNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CityMaster", Storage="_CityMasters", ThisKey="StateId", OtherKey="StateId")]
	public EntitySet<CityMaster> CityMasters
	{
		get
		{
			return this._CityMasters;
		}
		set
		{
			this._CityMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_ClientMaster", Storage="_ClientMasters", ThisKey="StateId", OtherKey="State1")]
	public EntitySet<ClientMaster> ClientMasters
	{
		get
		{
			return this._ClientMasters;
		}
		set
		{
			this._ClientMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_ClientMaster1", Storage="_ClientMasters1", ThisKey="StateId", OtherKey="State2")]
	public EntitySet<ClientMaster> ClientMasters1
	{
		get
		{
			return this._ClientMasters1;
		}
		set
		{
			this._ClientMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_StateMaster", Storage="_CountryMaster", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
	public CountryMaster CountryMaster
	{
		get
		{
			return this._CountryMaster.Entity;
		}
		set
		{
			CountryMaster previousValue = this._CountryMaster.Entity;
			if (((previousValue != value) 
						|| (this._CountryMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CountryMaster.Entity = null;
					previousValue.StateMasters.Remove(this);
				}
				this._CountryMaster.Entity = value;
				if ((value != null))
				{
					value.StateMasters.Add(this);
					this._CountryId = value.CountryId;
				}
				else
				{
					this._CountryId = default(long);
				}
				this.SendPropertyChanged("CountryMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_StateMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.StateMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.StateMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_StateMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.StateMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.StateMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = this;
	}
	
	private void detach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = null;
	}
	
	private void attach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = this;
	}
	
	private void detach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = null;
	}
	
	private void attach_ClientMasters1(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster1 = this;
	}
	
	private void detach_ClientMasters1(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SentEmail")]
public partial class SentEmail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _SentID;
	
	private long _InvoiceID;
	
	private string _MailTo;
	
	private string _MailCC;
	
	private string _MailBCC;
	
	private string _AttachIDs;
	
	private string _MailSubject;
	
	private string _MailBody;
	
	private long _MailSentBy;
	
	private System.DateTime _MailSentDate;
	
	private EntityRef<InvoiceMaster> _InvoiceMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSentIDChanging(long value);
    partial void OnSentIDChanged();
    partial void OnInvoiceIDChanging(long value);
    partial void OnInvoiceIDChanged();
    partial void OnMailToChanging(string value);
    partial void OnMailToChanged();
    partial void OnMailCCChanging(string value);
    partial void OnMailCCChanged();
    partial void OnMailBCCChanging(string value);
    partial void OnMailBCCChanged();
    partial void OnAttachIDsChanging(string value);
    partial void OnAttachIDsChanged();
    partial void OnMailSubjectChanging(string value);
    partial void OnMailSubjectChanged();
    partial void OnMailBodyChanging(string value);
    partial void OnMailBodyChanged();
    partial void OnMailSentByChanging(long value);
    partial void OnMailSentByChanged();
    partial void OnMailSentDateChanging(System.DateTime value);
    partial void OnMailSentDateChanged();
    #endregion
	
	public SentEmail()
	{
		this._InvoiceMaster = default(EntityRef<InvoiceMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long SentID
	{
		get
		{
			return this._SentID;
		}
		set
		{
			if ((this._SentID != value))
			{
				this.OnSentIDChanging(value);
				this.SendPropertyChanging();
				this._SentID = value;
				this.SendPropertyChanged("SentID");
				this.OnSentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="BigInt NOT NULL")]
	public long InvoiceID
	{
		get
		{
			return this._InvoiceID;
		}
		set
		{
			if ((this._InvoiceID != value))
			{
				if (this._InvoiceMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnInvoiceIDChanging(value);
				this.SendPropertyChanging();
				this._InvoiceID = value;
				this.SendPropertyChanged("InvoiceID");
				this.OnInvoiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailTo", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
	public string MailTo
	{
		get
		{
			return this._MailTo;
		}
		set
		{
			if ((this._MailTo != value))
			{
				this.OnMailToChanging(value);
				this.SendPropertyChanging();
				this._MailTo = value;
				this.SendPropertyChanged("MailTo");
				this.OnMailToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailCC", DbType="VarChar(500)")]
	public string MailCC
	{
		get
		{
			return this._MailCC;
		}
		set
		{
			if ((this._MailCC != value))
			{
				this.OnMailCCChanging(value);
				this.SendPropertyChanging();
				this._MailCC = value;
				this.SendPropertyChanged("MailCC");
				this.OnMailCCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailBCC", DbType="VarChar(500)")]
	public string MailBCC
	{
		get
		{
			return this._MailBCC;
		}
		set
		{
			if ((this._MailBCC != value))
			{
				this.OnMailBCCChanging(value);
				this.SendPropertyChanging();
				this._MailBCC = value;
				this.SendPropertyChanged("MailBCC");
				this.OnMailBCCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachIDs", DbType="VarChar(500)")]
	public string AttachIDs
	{
		get
		{
			return this._AttachIDs;
		}
		set
		{
			if ((this._AttachIDs != value))
			{
				this.OnAttachIDsChanging(value);
				this.SendPropertyChanging();
				this._AttachIDs = value;
				this.SendPropertyChanged("AttachIDs");
				this.OnAttachIDsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailSubject", DbType="VarChar(1000)")]
	public string MailSubject
	{
		get
		{
			return this._MailSubject;
		}
		set
		{
			if ((this._MailSubject != value))
			{
				this.OnMailSubjectChanging(value);
				this.SendPropertyChanging();
				this._MailSubject = value;
				this.SendPropertyChanged("MailSubject");
				this.OnMailSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailBody", DbType="VarChar(MAX)")]
	public string MailBody
	{
		get
		{
			return this._MailBody;
		}
		set
		{
			if ((this._MailBody != value))
			{
				this.OnMailBodyChanging(value);
				this.SendPropertyChanging();
				this._MailBody = value;
				this.SendPropertyChanged("MailBody");
				this.OnMailBodyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailSentBy", DbType="BigInt NOT NULL")]
	public long MailSentBy
	{
		get
		{
			return this._MailSentBy;
		}
		set
		{
			if ((this._MailSentBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMailSentByChanging(value);
				this.SendPropertyChanging();
				this._MailSentBy = value;
				this.SendPropertyChanged("MailSentBy");
				this.OnMailSentByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailSentDate", DbType="DateTime NOT NULL")]
	public System.DateTime MailSentDate
	{
		get
		{
			return this._MailSentDate;
		}
		set
		{
			if ((this._MailSentDate != value))
			{
				this.OnMailSentDateChanging(value);
				this.SendPropertyChanging();
				this._MailSentDate = value;
				this.SendPropertyChanged("MailSentDate");
				this.OnMailSentDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_SentEmail", Storage="_InvoiceMaster", ThisKey="InvoiceID", OtherKey="InvoiceId", IsForeignKey=true)]
	public InvoiceMaster InvoiceMaster
	{
		get
		{
			return this._InvoiceMaster.Entity;
		}
		set
		{
			InvoiceMaster previousValue = this._InvoiceMaster.Entity;
			if (((previousValue != value) 
						|| (this._InvoiceMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._InvoiceMaster.Entity = null;
					previousValue.SentEmails.Remove(this);
				}
				this._InvoiceMaster.Entity = value;
				if ((value != null))
				{
					value.SentEmails.Add(this);
					this._InvoiceID = value.InvoiceId;
				}
				else
				{
					this._InvoiceID = default(long);
				}
				this.SendPropertyChanged("InvoiceMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_SentEmail", Storage="_UserMaster", ThisKey="MailSentBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.SentEmails.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.SentEmails.Add(this);
					this._MailSentBy = value.UserId;
				}
				else
				{
					this._MailSentBy = default(long);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailConfiguration")]
public partial class EmailConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EConfigId;
	
	private string _HOST;
	
	private int _PORT;
	
	private string _HostUserName;
	
	private string _HostPassword;
	
	private System.Data.Linq.Binary _HostPasswordNew;
	
	private string _CreatedBy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEConfigIdChanging(int value);
    partial void OnEConfigIdChanged();
    partial void OnHOSTChanging(string value);
    partial void OnHOSTChanged();
    partial void OnPORTChanging(int value);
    partial void OnPORTChanged();
    partial void OnHostUserNameChanging(string value);
    partial void OnHostUserNameChanged();
    partial void OnHostPasswordChanging(string value);
    partial void OnHostPasswordChanged();
    partial void OnHostPasswordNewChanging(System.Data.Linq.Binary value);
    partial void OnHostPasswordNewChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
	
	public EmailConfiguration()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EConfigId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EConfigId
	{
		get
		{
			return this._EConfigId;
		}
		set
		{
			if ((this._EConfigId != value))
			{
				this.OnEConfigIdChanging(value);
				this.SendPropertyChanging();
				this._EConfigId = value;
				this.SendPropertyChanged("EConfigId");
				this.OnEConfigIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOST", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string HOST
	{
		get
		{
			return this._HOST;
		}
		set
		{
			if ((this._HOST != value))
			{
				this.OnHOSTChanging(value);
				this.SendPropertyChanging();
				this._HOST = value;
				this.SendPropertyChanged("HOST");
				this.OnHOSTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PORT", DbType="Int NOT NULL")]
	public int PORT
	{
		get
		{
			return this._PORT;
		}
		set
		{
			if ((this._PORT != value))
			{
				this.OnPORTChanging(value);
				this.SendPropertyChanging();
				this._PORT = value;
				this.SendPropertyChanged("PORT");
				this.OnPORTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostUserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string HostUserName
	{
		get
		{
			return this._HostUserName;
		}
		set
		{
			if ((this._HostUserName != value))
			{
				this.OnHostUserNameChanging(value);
				this.SendPropertyChanging();
				this._HostUserName = value;
				this.SendPropertyChanged("HostUserName");
				this.OnHostUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string HostPassword
	{
		get
		{
			return this._HostPassword;
		}
		set
		{
			if ((this._HostPassword != value))
			{
				this.OnHostPasswordChanging(value);
				this.SendPropertyChanging();
				this._HostPassword = value;
				this.SendPropertyChanged("HostPassword");
				this.OnHostPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostPasswordNew", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary HostPasswordNew
	{
		get
		{
			return this._HostPasswordNew;
		}
		set
		{
			if ((this._HostPasswordNew != value))
			{
				this.OnHostPasswordNewChanging(value);
				this.SendPropertyChanging();
				this._HostPasswordNew = value;
				this.SendPropertyChanged("HostPasswordNew");
				this.OnHostPasswordNewChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceTypeNew")]
public partial class PriceTypeNew : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _PriceTypeId;
	
	private string _PriceType;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private System.Nullable<bool> _IsDeleted;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceTypeIdChanging(long value);
    partial void OnPriceTypeIdChanged();
    partial void OnPriceTypeChanging(string value);
    partial void OnPriceTypeChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
	
	public PriceTypeNew()
	{
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTypeId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long PriceTypeId
	{
		get
		{
			return this._PriceTypeId;
		}
		set
		{
			if ((this._PriceTypeId != value))
			{
				this.OnPriceTypeIdChanging(value);
				this.SendPropertyChanging();
				this._PriceTypeId = value;
				this.SendPropertyChanged("PriceTypeId");
				this.OnPriceTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string PriceType
	{
		get
		{
			return this._PriceType;
		}
		set
		{
			if ((this._PriceType != value))
			{
				this.OnPriceTypeChanging(value);
				this.SendPropertyChanging();
				this._PriceType = value;
				this.SendPropertyChanged("PriceType");
				this.OnPriceTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
	public System.Nullable<bool> IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceTypeNew", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.PriceTypeNews.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.PriceTypeNews.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceTypeNew1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.PriceTypeNews1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.PriceTypeNews1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProformaInvoiceDetailsMaster")]
public partial class ProformaInvoiceDetailsMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ProInvoiceDetailsId;
	
	private long _ProInvoiceId;
	
	private string _ItemDesc;
	
	private string _PriceType;
	
	private System.Nullable<decimal> _Qty;
	
	private System.Nullable<decimal> _UnitPrice;
	
	private System.Nullable<decimal> _Discount;
	
	private System.Nullable<decimal> _TotalAmt;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _Modifydate;
	
	private EntityRef<ProformaInvoiceMaster> _ProformaInvoiceMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProInvoiceDetailsIdChanging(long value);
    partial void OnProInvoiceDetailsIdChanged();
    partial void OnProInvoiceIdChanging(long value);
    partial void OnProInvoiceIdChanged();
    partial void OnItemDescChanging(string value);
    partial void OnItemDescChanged();
    partial void OnPriceTypeChanging(string value);
    partial void OnPriceTypeChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnTotalAmtChanging(System.Nullable<decimal> value);
    partial void OnTotalAmtChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifydateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifydateChanged();
    #endregion
	
	public ProformaInvoiceDetailsMaster()
	{
		this._ProformaInvoiceMaster = default(EntityRef<ProformaInvoiceMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProInvoiceDetailsId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ProInvoiceDetailsId
	{
		get
		{
			return this._ProInvoiceDetailsId;
		}
		set
		{
			if ((this._ProInvoiceDetailsId != value))
			{
				this.OnProInvoiceDetailsIdChanging(value);
				this.SendPropertyChanging();
				this._ProInvoiceDetailsId = value;
				this.SendPropertyChanged("ProInvoiceDetailsId");
				this.OnProInvoiceDetailsIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProInvoiceId", DbType="BigInt NOT NULL")]
	public long ProInvoiceId
	{
		get
		{
			return this._ProInvoiceId;
		}
		set
		{
			if ((this._ProInvoiceId != value))
			{
				if (this._ProformaInvoiceMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProInvoiceIdChanging(value);
				this.SendPropertyChanging();
				this._ProInvoiceId = value;
				this.SendPropertyChanged("ProInvoiceId");
				this.OnProInvoiceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDesc", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
	public string ItemDesc
	{
		get
		{
			return this._ItemDesc;
		}
		set
		{
			if ((this._ItemDesc != value))
			{
				this.OnItemDescChanging(value);
				this.SendPropertyChanging();
				this._ItemDesc = value;
				this.SendPropertyChanged("ItemDesc");
				this.OnItemDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType", DbType="VarChar(30)")]
	public string PriceType
	{
		get
		{
			return this._PriceType;
		}
		set
		{
			if ((this._PriceType != value))
			{
				this.OnPriceTypeChanging(value);
				this.SendPropertyChanging();
				this._PriceType = value;
				this.SendPropertyChanged("PriceType");
				this.OnPriceTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Decimal(10,3)")]
	public System.Nullable<decimal> Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(13,5)")]
	public System.Nullable<decimal> UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(2,2)")]
	public System.Nullable<decimal> Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmt", DbType="Decimal(10,2)")]
	public System.Nullable<decimal> TotalAmt
	{
		get
		{
			return this._TotalAmt;
		}
		set
		{
			if ((this._TotalAmt != value))
			{
				this.OnTotalAmtChanging(value);
				this.SendPropertyChanging();
				this._TotalAmt = value;
				this.SendPropertyChanged("TotalAmt");
				this.OnTotalAmtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modifydate", DbType="DateTime")]
	public System.Nullable<System.DateTime> Modifydate
	{
		get
		{
			return this._Modifydate;
		}
		set
		{
			if ((this._Modifydate != value))
			{
				this.OnModifydateChanging(value);
				this.SendPropertyChanging();
				this._Modifydate = value;
				this.SendPropertyChanged("Modifydate");
				this.OnModifydateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProformaInvoiceMaster_ProformaInvoiceDetailsMaster", Storage="_ProformaInvoiceMaster", ThisKey="ProInvoiceId", OtherKey="ProInvoiceId", IsForeignKey=true)]
	public ProformaInvoiceMaster ProformaInvoiceMaster
	{
		get
		{
			return this._ProformaInvoiceMaster.Entity;
		}
		set
		{
			ProformaInvoiceMaster previousValue = this._ProformaInvoiceMaster.Entity;
			if (((previousValue != value) 
						|| (this._ProformaInvoiceMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProformaInvoiceMaster.Entity = null;
					previousValue.ProformaInvoiceDetailsMasters.Remove(this);
				}
				this._ProformaInvoiceMaster.Entity = value;
				if ((value != null))
				{
					value.ProformaInvoiceDetailsMasters.Add(this);
					this._ProInvoiceId = value.ProInvoiceId;
				}
				else
				{
					this._ProInvoiceId = default(long);
				}
				this.SendPropertyChanged("ProformaInvoiceMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProformaInvoiceDetailsMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.ProformaInvoiceDetailsMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.ProformaInvoiceDetailsMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProformaInvoiceDetailsMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.ProformaInvoiceDetailsMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.ProformaInvoiceDetailsMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Individual_ContactMaster")]
public partial class Individual_ContactMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _IndividualID;
	
	private System.Nullable<long> _CompanyID;
	
	private string _ContactPerson;
	
	private string _ContactNumber;
	
	private string _EmailAddress;
	
	private string _Description;
	
	private System.Nullable<bool> _IsDelete;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private EntitySet<PaymentDetailsMaster> _PaymentDetailsMasters;
	
	private EntityRef<CompanyMaster> _CompanyMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIndividualIDChanging(long value);
    partial void OnIndividualIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<long> value);
    partial void OnCompanyIDChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
	
	public Individual_ContactMaster()
	{
		this._PaymentDetailsMasters = new EntitySet<PaymentDetailsMaster>(new Action<PaymentDetailsMaster>(this.attach_PaymentDetailsMasters), new Action<PaymentDetailsMaster>(this.detach_PaymentDetailsMasters));
		this._CompanyMaster = default(EntityRef<CompanyMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndividualID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long IndividualID
	{
		get
		{
			return this._IndividualID;
		}
		set
		{
			if ((this._IndividualID != value))
			{
				this.OnIndividualIDChanging(value);
				this.SendPropertyChanging();
				this._IndividualID = value;
				this.SendPropertyChanged("IndividualID");
				this.OnIndividualIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="BigInt")]
	public System.Nullable<long> CompanyID
	{
		get
		{
			return this._CompanyID;
		}
		set
		{
			if ((this._CompanyID != value))
			{
				if (this._CompanyMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._CompanyID = value;
				this.SendPropertyChanged("CompanyID");
				this.OnCompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="VarChar(50)")]
	public string ContactPerson
	{
		get
		{
			return this._ContactPerson;
		}
		set
		{
			if ((this._ContactPerson != value))
			{
				this.OnContactPersonChanging(value);
				this.SendPropertyChanging();
				this._ContactPerson = value;
				this.SendPropertyChanged("ContactPerson");
				this.OnContactPersonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="VarChar(15)")]
	public string ContactNumber
	{
		get
		{
			return this._ContactNumber;
		}
		set
		{
			if ((this._ContactNumber != value))
			{
				this.OnContactNumberChanging(value);
				this.SendPropertyChanging();
				this._ContactNumber = value;
				this.SendPropertyChanged("ContactNumber");
				this.OnContactNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(50)")]
	public string EmailAddress
	{
		get
		{
			return this._EmailAddress;
		}
		set
		{
			if ((this._EmailAddress != value))
			{
				this.OnEmailAddressChanging(value);
				this.SendPropertyChanging();
				this._EmailAddress = value;
				this.SendPropertyChanged("EmailAddress");
				this.OnEmailAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Individual_ContactMaster_PaymentDetailsMaster", Storage="_PaymentDetailsMasters", ThisKey="IndividualID", OtherKey="IndividualName")]
	public EntitySet<PaymentDetailsMaster> PaymentDetailsMasters
	{
		get
		{
			return this._PaymentDetailsMasters;
		}
		set
		{
			this._PaymentDetailsMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_Individual_ContactMaster", Storage="_CompanyMaster", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
	public CompanyMaster CompanyMaster
	{
		get
		{
			return this._CompanyMaster.Entity;
		}
		set
		{
			CompanyMaster previousValue = this._CompanyMaster.Entity;
			if (((previousValue != value) 
						|| (this._CompanyMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompanyMaster.Entity = null;
					previousValue.Individual_ContactMasters.Remove(this);
				}
				this._CompanyMaster.Entity = value;
				if ((value != null))
				{
					value.Individual_ContactMasters.Add(this);
					this._CompanyID = value.CompanyID;
				}
				else
				{
					this._CompanyID = default(Nullable<long>);
				}
				this.SendPropertyChanged("CompanyMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_Individual_ContactMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.Individual_ContactMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.Individual_ContactMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_Individual_ContactMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.Individual_ContactMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.Individual_ContactMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PaymentDetailsMasters(PaymentDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.Individual_ContactMaster = this;
	}
	
	private void detach_PaymentDetailsMasters(PaymentDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.Individual_ContactMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDetailsMaster")]
public partial class InvoiceDetailsMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _InvoiceDetailsId;
	
	private long _InvoiceId;
	
	private string _ItemDesc;
	
	private string _PriceType;
	
	private System.Nullable<decimal> _Qty;
	
	private System.Nullable<decimal> _UnitPrice;
	
	private System.Nullable<decimal> _Discount;
	
	private System.Nullable<decimal> _TotalAmt;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _Modifydate;
	
	private System.Nullable<long> _ProInvoiceDetailsId;
	
	private EntityRef<InvoiceMaster> _InvoiceMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceDetailsIdChanging(long value);
    partial void OnInvoiceDetailsIdChanged();
    partial void OnInvoiceIdChanging(long value);
    partial void OnInvoiceIdChanged();
    partial void OnItemDescChanging(string value);
    partial void OnItemDescChanged();
    partial void OnPriceTypeChanging(string value);
    partial void OnPriceTypeChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnTotalAmtChanging(System.Nullable<decimal> value);
    partial void OnTotalAmtChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifydateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifydateChanged();
    partial void OnProInvoiceDetailsIdChanging(System.Nullable<long> value);
    partial void OnProInvoiceDetailsIdChanged();
    #endregion
	
	public InvoiceDetailsMaster()
	{
		this._InvoiceMaster = default(EntityRef<InvoiceMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDetailsId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long InvoiceDetailsId
	{
		get
		{
			return this._InvoiceDetailsId;
		}
		set
		{
			if ((this._InvoiceDetailsId != value))
			{
				this.OnInvoiceDetailsIdChanging(value);
				this.SendPropertyChanging();
				this._InvoiceDetailsId = value;
				this.SendPropertyChanged("InvoiceDetailsId");
				this.OnInvoiceDetailsIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="BigInt NOT NULL")]
	public long InvoiceId
	{
		get
		{
			return this._InvoiceId;
		}
		set
		{
			if ((this._InvoiceId != value))
			{
				if (this._InvoiceMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnInvoiceIdChanging(value);
				this.SendPropertyChanging();
				this._InvoiceId = value;
				this.SendPropertyChanged("InvoiceId");
				this.OnInvoiceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDesc", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
	public string ItemDesc
	{
		get
		{
			return this._ItemDesc;
		}
		set
		{
			if ((this._ItemDesc != value))
			{
				this.OnItemDescChanging(value);
				this.SendPropertyChanging();
				this._ItemDesc = value;
				this.SendPropertyChanged("ItemDesc");
				this.OnItemDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType", DbType="VarChar(30)")]
	public string PriceType
	{
		get
		{
			return this._PriceType;
		}
		set
		{
			if ((this._PriceType != value))
			{
				this.OnPriceTypeChanging(value);
				this.SendPropertyChanging();
				this._PriceType = value;
				this.SendPropertyChanged("PriceType");
				this.OnPriceTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Decimal(10,3)")]
	public System.Nullable<decimal> Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(13,5)")]
	public System.Nullable<decimal> UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(2,2)")]
	public System.Nullable<decimal> Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmt", DbType="Decimal(10,2)")]
	public System.Nullable<decimal> TotalAmt
	{
		get
		{
			return this._TotalAmt;
		}
		set
		{
			if ((this._TotalAmt != value))
			{
				this.OnTotalAmtChanging(value);
				this.SendPropertyChanging();
				this._TotalAmt = value;
				this.SendPropertyChanged("TotalAmt");
				this.OnTotalAmtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modifydate", DbType="DateTime")]
	public System.Nullable<System.DateTime> Modifydate
	{
		get
		{
			return this._Modifydate;
		}
		set
		{
			if ((this._Modifydate != value))
			{
				this.OnModifydateChanging(value);
				this.SendPropertyChanging();
				this._Modifydate = value;
				this.SendPropertyChanged("Modifydate");
				this.OnModifydateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProInvoiceDetailsId", DbType="BigInt")]
	public System.Nullable<long> ProInvoiceDetailsId
	{
		get
		{
			return this._ProInvoiceDetailsId;
		}
		set
		{
			if ((this._ProInvoiceDetailsId != value))
			{
				this.OnProInvoiceDetailsIdChanging(value);
				this.SendPropertyChanging();
				this._ProInvoiceDetailsId = value;
				this.SendPropertyChanged("ProInvoiceDetailsId");
				this.OnProInvoiceDetailsIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_InvoiceDetailsMaster", Storage="_InvoiceMaster", ThisKey="InvoiceId", OtherKey="InvoiceId", IsForeignKey=true)]
	public InvoiceMaster InvoiceMaster
	{
		get
		{
			return this._InvoiceMaster.Entity;
		}
		set
		{
			InvoiceMaster previousValue = this._InvoiceMaster.Entity;
			if (((previousValue != value) 
						|| (this._InvoiceMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._InvoiceMaster.Entity = null;
					previousValue.InvoiceDetailsMasters.Remove(this);
				}
				this._InvoiceMaster.Entity = value;
				if ((value != null))
				{
					value.InvoiceDetailsMasters.Add(this);
					this._InvoiceId = value.InvoiceId;
				}
				else
				{
					this._InvoiceId = default(long);
				}
				this.SendPropertyChanged("InvoiceMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_InvoiceDetailsMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.InvoiceDetailsMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.InvoiceDetailsMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_InvoiceDetailsMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.InvoiceDetailsMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.InvoiceDetailsMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentDetailsMaster")]
public partial class PaymentDetailsMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _PaymentID;
	
	private System.Nullable<long> _InvoiceNo;
	
	private System.Nullable<decimal> _InvoiceAmount;
	
	private string _InvoiceCurrency;
	
	private System.Nullable<decimal> _AmountReceived;
	
	private System.Nullable<long> _Consultant_Company;
	
	private System.Nullable<long> _IndividualName;
	
	private string _PaidCurrency;
	
	private System.Nullable<decimal> _PaidAmount;
	
	private System.Nullable<System.DateTime> _PaidDate;
	
	private string _Remarks;
	
	private System.Nullable<bool> _IsDelete;
	
	private EntityRef<Individual_ContactMaster> _Individual_ContactMaster;
	
	private EntityRef<CompanyMaster> _CompanyMaster;
	
	private EntityRef<InvoiceMaster> _InvoiceMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentIDChanging(long value);
    partial void OnPaymentIDChanged();
    partial void OnInvoiceNoChanging(System.Nullable<long> value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceAmountChanging(System.Nullable<decimal> value);
    partial void OnInvoiceAmountChanged();
    partial void OnInvoiceCurrencyChanging(string value);
    partial void OnInvoiceCurrencyChanged();
    partial void OnAmountReceivedChanging(System.Nullable<decimal> value);
    partial void OnAmountReceivedChanged();
    partial void OnConsultant_CompanyChanging(System.Nullable<long> value);
    partial void OnConsultant_CompanyChanged();
    partial void OnIndividualNameChanging(System.Nullable<long> value);
    partial void OnIndividualNameChanged();
    partial void OnPaidCurrencyChanging(string value);
    partial void OnPaidCurrencyChanged();
    partial void OnPaidAmountChanging(System.Nullable<decimal> value);
    partial void OnPaidAmountChanged();
    partial void OnPaidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaidDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public PaymentDetailsMaster()
	{
		this._Individual_ContactMaster = default(EntityRef<Individual_ContactMaster>);
		this._CompanyMaster = default(EntityRef<CompanyMaster>);
		this._InvoiceMaster = default(EntityRef<InvoiceMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long PaymentID
	{
		get
		{
			return this._PaymentID;
		}
		set
		{
			if ((this._PaymentID != value))
			{
				this.OnPaymentIDChanging(value);
				this.SendPropertyChanging();
				this._PaymentID = value;
				this.SendPropertyChanged("PaymentID");
				this.OnPaymentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="BigInt")]
	public System.Nullable<long> InvoiceNo
	{
		get
		{
			return this._InvoiceNo;
		}
		set
		{
			if ((this._InvoiceNo != value))
			{
				if (this._InvoiceMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnInvoiceNoChanging(value);
				this.SendPropertyChanging();
				this._InvoiceNo = value;
				this.SendPropertyChanged("InvoiceNo");
				this.OnInvoiceNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAmount", DbType="Decimal(10,2)")]
	public System.Nullable<decimal> InvoiceAmount
	{
		get
		{
			return this._InvoiceAmount;
		}
		set
		{
			if ((this._InvoiceAmount != value))
			{
				this.OnInvoiceAmountChanging(value);
				this.SendPropertyChanging();
				this._InvoiceAmount = value;
				this.SendPropertyChanged("InvoiceAmount");
				this.OnInvoiceAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCurrency", DbType="VarChar(15)")]
	public string InvoiceCurrency
	{
		get
		{
			return this._InvoiceCurrency;
		}
		set
		{
			if ((this._InvoiceCurrency != value))
			{
				this.OnInvoiceCurrencyChanging(value);
				this.SendPropertyChanging();
				this._InvoiceCurrency = value;
				this.SendPropertyChanged("InvoiceCurrency");
				this.OnInvoiceCurrencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountReceived", DbType="Decimal(10,2)")]
	public System.Nullable<decimal> AmountReceived
	{
		get
		{
			return this._AmountReceived;
		}
		set
		{
			if ((this._AmountReceived != value))
			{
				this.OnAmountReceivedChanging(value);
				this.SendPropertyChanging();
				this._AmountReceived = value;
				this.SendPropertyChanged("AmountReceived");
				this.OnAmountReceivedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_Company", DbType="BigInt")]
	public System.Nullable<long> Consultant_Company
	{
		get
		{
			return this._Consultant_Company;
		}
		set
		{
			if ((this._Consultant_Company != value))
			{
				if (this._CompanyMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnConsultant_CompanyChanging(value);
				this.SendPropertyChanging();
				this._Consultant_Company = value;
				this.SendPropertyChanged("Consultant_Company");
				this.OnConsultant_CompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndividualName", DbType="BigInt")]
	public System.Nullable<long> IndividualName
	{
		get
		{
			return this._IndividualName;
		}
		set
		{
			if ((this._IndividualName != value))
			{
				if (this._Individual_ContactMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIndividualNameChanging(value);
				this.SendPropertyChanging();
				this._IndividualName = value;
				this.SendPropertyChanged("IndividualName");
				this.OnIndividualNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidCurrency", DbType="VarChar(10)")]
	public string PaidCurrency
	{
		get
		{
			return this._PaidCurrency;
		}
		set
		{
			if ((this._PaidCurrency != value))
			{
				this.OnPaidCurrencyChanging(value);
				this.SendPropertyChanging();
				this._PaidCurrency = value;
				this.SendPropertyChanged("PaidCurrency");
				this.OnPaidCurrencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(10,2)")]
	public System.Nullable<decimal> PaidAmount
	{
		get
		{
			return this._PaidAmount;
		}
		set
		{
			if ((this._PaidAmount != value))
			{
				this.OnPaidAmountChanging(value);
				this.SendPropertyChanging();
				this._PaidAmount = value;
				this.SendPropertyChanged("PaidAmount");
				this.OnPaidAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> PaidDate
	{
		get
		{
			return this._PaidDate;
		}
		set
		{
			if ((this._PaidDate != value))
			{
				this.OnPaidDateChanging(value);
				this.SendPropertyChanging();
				this._PaidDate = value;
				this.SendPropertyChanged("PaidDate");
				this.OnPaidDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(MAX)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Individual_ContactMaster_PaymentDetailsMaster", Storage="_Individual_ContactMaster", ThisKey="IndividualName", OtherKey="IndividualID", IsForeignKey=true)]
	public Individual_ContactMaster Individual_ContactMaster
	{
		get
		{
			return this._Individual_ContactMaster.Entity;
		}
		set
		{
			Individual_ContactMaster previousValue = this._Individual_ContactMaster.Entity;
			if (((previousValue != value) 
						|| (this._Individual_ContactMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Individual_ContactMaster.Entity = null;
					previousValue.PaymentDetailsMasters.Remove(this);
				}
				this._Individual_ContactMaster.Entity = value;
				if ((value != null))
				{
					value.PaymentDetailsMasters.Add(this);
					this._IndividualName = value.IndividualID;
				}
				else
				{
					this._IndividualName = default(Nullable<long>);
				}
				this.SendPropertyChanged("Individual_ContactMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_PaymentDetailsMaster", Storage="_CompanyMaster", ThisKey="Consultant_Company", OtherKey="CompanyID", IsForeignKey=true)]
	public CompanyMaster CompanyMaster
	{
		get
		{
			return this._CompanyMaster.Entity;
		}
		set
		{
			CompanyMaster previousValue = this._CompanyMaster.Entity;
			if (((previousValue != value) 
						|| (this._CompanyMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompanyMaster.Entity = null;
					previousValue.PaymentDetailsMasters.Remove(this);
				}
				this._CompanyMaster.Entity = value;
				if ((value != null))
				{
					value.PaymentDetailsMasters.Add(this);
					this._Consultant_Company = value.CompanyID;
				}
				else
				{
					this._Consultant_Company = default(Nullable<long>);
				}
				this.SendPropertyChanged("CompanyMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_PaymentDetailsMaster", Storage="_InvoiceMaster", ThisKey="InvoiceNo", OtherKey="InvoiceId", IsForeignKey=true)]
	public InvoiceMaster InvoiceMaster
	{
		get
		{
			return this._InvoiceMaster.Entity;
		}
		set
		{
			InvoiceMaster previousValue = this._InvoiceMaster.Entity;
			if (((previousValue != value) 
						|| (this._InvoiceMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._InvoiceMaster.Entity = null;
					previousValue.PaymentDetailsMasters.Remove(this);
				}
				this._InvoiceMaster.Entity = value;
				if ((value != null))
				{
					value.PaymentDetailsMasters.Add(this);
					this._InvoiceNo = value.InvoiceId;
				}
				else
				{
					this._InvoiceNo = default(Nullable<long>);
				}
				this.SendPropertyChanged("InvoiceMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyMaster")]
public partial class CompanyMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _CompanyID;
	
	private string _CompanyName;
	
	private string _CompanyPhone;
	
	private string _Address;
	
	private string _Website;
	
	private string _Description;
	
	private System.Nullable<long> _CurrencyType;
	
	private System.Nullable<long> _DepartmentID;
	
	private System.Nullable<bool> _IsDelete;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private System.Nullable<bool> _Com_M1;
	
	private System.Nullable<bool> _Com_M2;
	
	private EntitySet<Individual_ContactMaster> _Individual_ContactMasters;
	
	private EntitySet<PaymentDetailsMaster> _PaymentDetailsMasters;
	
	private EntityRef<CurrencyMaster> _CurrencyMaster;
	
	private EntityRef<DepartmentMaster> _DepartmentMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(long value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyPhoneChanging(string value);
    partial void OnCompanyPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCurrencyTypeChanging(System.Nullable<long> value);
    partial void OnCurrencyTypeChanged();
    partial void OnDepartmentIDChanging(System.Nullable<long> value);
    partial void OnDepartmentIDChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnCom_M1Changing(System.Nullable<bool> value);
    partial void OnCom_M1Changed();
    partial void OnCom_M2Changing(System.Nullable<bool> value);
    partial void OnCom_M2Changed();
    #endregion
	
	public CompanyMaster()
	{
		this._Individual_ContactMasters = new EntitySet<Individual_ContactMaster>(new Action<Individual_ContactMaster>(this.attach_Individual_ContactMasters), new Action<Individual_ContactMaster>(this.detach_Individual_ContactMasters));
		this._PaymentDetailsMasters = new EntitySet<PaymentDetailsMaster>(new Action<PaymentDetailsMaster>(this.attach_PaymentDetailsMasters), new Action<PaymentDetailsMaster>(this.detach_PaymentDetailsMasters));
		this._CurrencyMaster = default(EntityRef<CurrencyMaster>);
		this._DepartmentMaster = default(EntityRef<DepartmentMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long CompanyID
	{
		get
		{
			return this._CompanyID;
		}
		set
		{
			if ((this._CompanyID != value))
			{
				this.OnCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._CompanyID = value;
				this.SendPropertyChanged("CompanyID");
				this.OnCompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(50)")]
	public string CompanyName
	{
		get
		{
			return this._CompanyName;
		}
		set
		{
			if ((this._CompanyName != value))
			{
				this.OnCompanyNameChanging(value);
				this.SendPropertyChanging();
				this._CompanyName = value;
				this.SendPropertyChanged("CompanyName");
				this.OnCompanyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyPhone", DbType="VarChar(15)")]
	public string CompanyPhone
	{
		get
		{
			return this._CompanyPhone;
		}
		set
		{
			if ((this._CompanyPhone != value))
			{
				this.OnCompanyPhoneChanging(value);
				this.SendPropertyChanging();
				this._CompanyPhone = value;
				this.SendPropertyChanged("CompanyPhone");
				this.OnCompanyPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(50)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyType", DbType="BigInt")]
	public System.Nullable<long> CurrencyType
	{
		get
		{
			return this._CurrencyType;
		}
		set
		{
			if ((this._CurrencyType != value))
			{
				if (this._CurrencyMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCurrencyTypeChanging(value);
				this.SendPropertyChanging();
				this._CurrencyType = value;
				this.SendPropertyChanged("CurrencyType");
				this.OnCurrencyTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="BigInt")]
	public System.Nullable<long> DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				if (this._DepartmentMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com_M1", DbType="Bit")]
	public System.Nullable<bool> Com_M1
	{
		get
		{
			return this._Com_M1;
		}
		set
		{
			if ((this._Com_M1 != value))
			{
				this.OnCom_M1Changing(value);
				this.SendPropertyChanging();
				this._Com_M1 = value;
				this.SendPropertyChanged("Com_M1");
				this.OnCom_M1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com_M2", DbType="Bit")]
	public System.Nullable<bool> Com_M2
	{
		get
		{
			return this._Com_M2;
		}
		set
		{
			if ((this._Com_M2 != value))
			{
				this.OnCom_M2Changing(value);
				this.SendPropertyChanging();
				this._Com_M2 = value;
				this.SendPropertyChanged("Com_M2");
				this.OnCom_M2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_Individual_ContactMaster", Storage="_Individual_ContactMasters", ThisKey="CompanyID", OtherKey="CompanyID")]
	public EntitySet<Individual_ContactMaster> Individual_ContactMasters
	{
		get
		{
			return this._Individual_ContactMasters;
		}
		set
		{
			this._Individual_ContactMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_PaymentDetailsMaster", Storage="_PaymentDetailsMasters", ThisKey="CompanyID", OtherKey="Consultant_Company")]
	public EntitySet<PaymentDetailsMaster> PaymentDetailsMasters
	{
		get
		{
			return this._PaymentDetailsMasters;
		}
		set
		{
			this._PaymentDetailsMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyMaster_CompanyMaster", Storage="_CurrencyMaster", ThisKey="CurrencyType", OtherKey="CurrencyId", IsForeignKey=true)]
	public CurrencyMaster CurrencyMaster
	{
		get
		{
			return this._CurrencyMaster.Entity;
		}
		set
		{
			CurrencyMaster previousValue = this._CurrencyMaster.Entity;
			if (((previousValue != value) 
						|| (this._CurrencyMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CurrencyMaster.Entity = null;
					previousValue.CompanyMasters.Remove(this);
				}
				this._CurrencyMaster.Entity = value;
				if ((value != null))
				{
					value.CompanyMasters.Add(this);
					this._CurrencyType = value.CurrencyId;
				}
				else
				{
					this._CurrencyType = default(Nullable<long>);
				}
				this.SendPropertyChanged("CurrencyMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentMaster_CompanyMaster", Storage="_DepartmentMaster", ThisKey="DepartmentID", OtherKey="DepartmentId", IsForeignKey=true)]
	public DepartmentMaster DepartmentMaster
	{
		get
		{
			return this._DepartmentMaster.Entity;
		}
		set
		{
			DepartmentMaster previousValue = this._DepartmentMaster.Entity;
			if (((previousValue != value) 
						|| (this._DepartmentMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DepartmentMaster.Entity = null;
					previousValue.CompanyMasters.Remove(this);
				}
				this._DepartmentMaster.Entity = value;
				if ((value != null))
				{
					value.CompanyMasters.Add(this);
					this._DepartmentID = value.DepartmentId;
				}
				else
				{
					this._DepartmentID = default(Nullable<long>);
				}
				this.SendPropertyChanged("DepartmentMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CompanyMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.CompanyMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.CompanyMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CompanyMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.CompanyMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.CompanyMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Individual_ContactMasters(Individual_ContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = this;
	}
	
	private void detach_Individual_ContactMasters(Individual_ContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = null;
	}
	
	private void attach_PaymentDetailsMasters(PaymentDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = this;
	}
	
	private void detach_PaymentDetailsMasters(PaymentDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceMaster")]
public partial class InvoiceMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _InvoiceId;
	
	private long _ClientId;
	
	private long _InvoiceSeqNo;
	
	private System.DateTime _InvoiceDate;
	
	private string _InvoiceNumber;
	
	private string _InvoiceFor;
	
	private string _Revision;
	
	private string _PONumber;
	
	private System.Nullable<System.DateTime> _PODate;
	
	private System.DateTime _InvoiceStartDate;
	
	private System.DateTime _InvoiceEndDate;
	
	private System.Nullable<long> _ProjectFrom;
	
	private string _AttachmentName;
	
	private string _Remarks;
	
	private bool _IsPaid;
	
	private System.Nullable<System.DateTime> _PaidDate;
	
	private string _InvoiceStatus;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private System.Nullable<long> _ApprovedBy;
	
	private System.Nullable<System.DateTime> _ApprovedDate;
	
	private System.Nullable<bool> _IsRevised;
	
	private System.Nullable<bool> _IsDeleted;
	
	private System.Nullable<long> _ProInvoiceId;
	
	private EntitySet<AttachmentMaster> _AttachmentMasters;
	
	private EntitySet<FollowUpMaster> _FollowUpMasters;
	
	private EntitySet<SentEmail> _SentEmails;
	
	private EntitySet<InvoiceDetailsMaster> _InvoiceDetailsMasters;
	
	private EntitySet<PaymentDetailsMaster> _PaymentDetailsMasters;
	
	private EntitySet<ProformaInvoiceMaster> _ProformaInvoiceMasters;
	
	private EntityRef<ClientMaster> _ClientMaster;
	
	private EntityRef<ProformaInvoiceMaster> _ProformaInvoiceMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(long value);
    partial void OnInvoiceIdChanged();
    partial void OnClientIdChanging(long value);
    partial void OnClientIdChanged();
    partial void OnInvoiceSeqNoChanging(long value);
    partial void OnInvoiceSeqNoChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnInvoiceForChanging(string value);
    partial void OnInvoiceForChanged();
    partial void OnRevisionChanging(string value);
    partial void OnRevisionChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnPODateChanging(System.Nullable<System.DateTime> value);
    partial void OnPODateChanged();
    partial void OnInvoiceStartDateChanging(System.DateTime value);
    partial void OnInvoiceStartDateChanged();
    partial void OnInvoiceEndDateChanging(System.DateTime value);
    partial void OnInvoiceEndDateChanged();
    partial void OnProjectFromChanging(System.Nullable<long> value);
    partial void OnProjectFromChanged();
    partial void OnAttachmentNameChanging(string value);
    partial void OnAttachmentNameChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnPaidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaidDateChanged();
    partial void OnInvoiceStatusChanging(string value);
    partial void OnInvoiceStatusChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnApprovedByChanging(System.Nullable<long> value);
    partial void OnApprovedByChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnIsRevisedChanging(System.Nullable<bool> value);
    partial void OnIsRevisedChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnProInvoiceIdChanging(System.Nullable<long> value);
    partial void OnProInvoiceIdChanged();
    #endregion
	
	public InvoiceMaster()
	{
		this._AttachmentMasters = new EntitySet<AttachmentMaster>(new Action<AttachmentMaster>(this.attach_AttachmentMasters), new Action<AttachmentMaster>(this.detach_AttachmentMasters));
		this._FollowUpMasters = new EntitySet<FollowUpMaster>(new Action<FollowUpMaster>(this.attach_FollowUpMasters), new Action<FollowUpMaster>(this.detach_FollowUpMasters));
		this._SentEmails = new EntitySet<SentEmail>(new Action<SentEmail>(this.attach_SentEmails), new Action<SentEmail>(this.detach_SentEmails));
		this._InvoiceDetailsMasters = new EntitySet<InvoiceDetailsMaster>(new Action<InvoiceDetailsMaster>(this.attach_InvoiceDetailsMasters), new Action<InvoiceDetailsMaster>(this.detach_InvoiceDetailsMasters));
		this._PaymentDetailsMasters = new EntitySet<PaymentDetailsMaster>(new Action<PaymentDetailsMaster>(this.attach_PaymentDetailsMasters), new Action<PaymentDetailsMaster>(this.detach_PaymentDetailsMasters));
		this._ProformaInvoiceMasters = new EntitySet<ProformaInvoiceMaster>(new Action<ProformaInvoiceMaster>(this.attach_ProformaInvoiceMasters), new Action<ProformaInvoiceMaster>(this.detach_ProformaInvoiceMasters));
		this._ClientMaster = default(EntityRef<ClientMaster>);
		this._ProformaInvoiceMaster = default(EntityRef<ProformaInvoiceMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long InvoiceId
	{
		get
		{
			return this._InvoiceId;
		}
		set
		{
			if ((this._InvoiceId != value))
			{
				this.OnInvoiceIdChanging(value);
				this.SendPropertyChanging();
				this._InvoiceId = value;
				this.SendPropertyChanged("InvoiceId");
				this.OnInvoiceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="BigInt NOT NULL")]
	public long ClientId
	{
		get
		{
			return this._ClientId;
		}
		set
		{
			if ((this._ClientId != value))
			{
				if (this._ClientMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnClientIdChanging(value);
				this.SendPropertyChanging();
				this._ClientId = value;
				this.SendPropertyChanged("ClientId");
				this.OnClientIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceSeqNo", DbType="BigInt NOT NULL")]
	public long InvoiceSeqNo
	{
		get
		{
			return this._InvoiceSeqNo;
		}
		set
		{
			if ((this._InvoiceSeqNo != value))
			{
				this.OnInvoiceSeqNoChanging(value);
				this.SendPropertyChanging();
				this._InvoiceSeqNo = value;
				this.SendPropertyChanged("InvoiceSeqNo");
				this.OnInvoiceSeqNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime NOT NULL")]
	public System.DateTime InvoiceDate
	{
		get
		{
			return this._InvoiceDate;
		}
		set
		{
			if ((this._InvoiceDate != value))
			{
				this.OnInvoiceDateChanging(value);
				this.SendPropertyChanging();
				this._InvoiceDate = value;
				this.SendPropertyChanged("InvoiceDate");
				this.OnInvoiceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string InvoiceNumber
	{
		get
		{
			return this._InvoiceNumber;
		}
		set
		{
			if ((this._InvoiceNumber != value))
			{
				this.OnInvoiceNumberChanging(value);
				this.SendPropertyChanging();
				this._InvoiceNumber = value;
				this.SendPropertyChanged("InvoiceNumber");
				this.OnInvoiceNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceFor", DbType="VarChar(10)")]
	public string InvoiceFor
	{
		get
		{
			return this._InvoiceFor;
		}
		set
		{
			if ((this._InvoiceFor != value))
			{
				this.OnInvoiceForChanging(value);
				this.SendPropertyChanging();
				this._InvoiceFor = value;
				this.SendPropertyChanged("InvoiceFor");
				this.OnInvoiceForChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="VarChar(2)")]
	public string Revision
	{
		get
		{
			return this._Revision;
		}
		set
		{
			if ((this._Revision != value))
			{
				this.OnRevisionChanging(value);
				this.SendPropertyChanging();
				this._Revision = value;
				this.SendPropertyChanged("Revision");
				this.OnRevisionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="VarChar(100)")]
	public string PONumber
	{
		get
		{
			return this._PONumber;
		}
		set
		{
			if ((this._PONumber != value))
			{
				this.OnPONumberChanging(value);
				this.SendPropertyChanging();
				this._PONumber = value;
				this.SendPropertyChanged("PONumber");
				this.OnPONumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODate", DbType="DateTime")]
	public System.Nullable<System.DateTime> PODate
	{
		get
		{
			return this._PODate;
		}
		set
		{
			if ((this._PODate != value))
			{
				this.OnPODateChanging(value);
				this.SendPropertyChanging();
				this._PODate = value;
				this.SendPropertyChanged("PODate");
				this.OnPODateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceStartDate", DbType="DateTime NOT NULL")]
	public System.DateTime InvoiceStartDate
	{
		get
		{
			return this._InvoiceStartDate;
		}
		set
		{
			if ((this._InvoiceStartDate != value))
			{
				this.OnInvoiceStartDateChanging(value);
				this.SendPropertyChanging();
				this._InvoiceStartDate = value;
				this.SendPropertyChanged("InvoiceStartDate");
				this.OnInvoiceStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceEndDate", DbType="DateTime NOT NULL")]
	public System.DateTime InvoiceEndDate
	{
		get
		{
			return this._InvoiceEndDate;
		}
		set
		{
			if ((this._InvoiceEndDate != value))
			{
				this.OnInvoiceEndDateChanging(value);
				this.SendPropertyChanging();
				this._InvoiceEndDate = value;
				this.SendPropertyChanged("InvoiceEndDate");
				this.OnInvoiceEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectFrom", DbType="BigInt")]
	public System.Nullable<long> ProjectFrom
	{
		get
		{
			return this._ProjectFrom;
		}
		set
		{
			if ((this._ProjectFrom != value))
			{
				this.OnProjectFromChanging(value);
				this.SendPropertyChanging();
				this._ProjectFrom = value;
				this.SendPropertyChanged("ProjectFrom");
				this.OnProjectFromChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="VarChar(100)")]
	public string AttachmentName
	{
		get
		{
			return this._AttachmentName;
		}
		set
		{
			if ((this._AttachmentName != value))
			{
				this.OnAttachmentNameChanging(value);
				this.SendPropertyChanging();
				this._AttachmentName = value;
				this.SendPropertyChanged("AttachmentName");
				this.OnAttachmentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(MAX)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
	public bool IsPaid
	{
		get
		{
			return this._IsPaid;
		}
		set
		{
			if ((this._IsPaid != value))
			{
				this.OnIsPaidChanging(value);
				this.SendPropertyChanging();
				this._IsPaid = value;
				this.SendPropertyChanged("IsPaid");
				this.OnIsPaidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> PaidDate
	{
		get
		{
			return this._PaidDate;
		}
		set
		{
			if ((this._PaidDate != value))
			{
				this.OnPaidDateChanging(value);
				this.SendPropertyChanging();
				this._PaidDate = value;
				this.SendPropertyChanged("PaidDate");
				this.OnPaidDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceStatus", DbType="VarChar(15)")]
	public string InvoiceStatus
	{
		get
		{
			return this._InvoiceStatus;
		}
		set
		{
			if ((this._InvoiceStatus != value))
			{
				this.OnInvoiceStatusChanging(value);
				this.SendPropertyChanging();
				this._InvoiceStatus = value;
				this.SendPropertyChanged("InvoiceStatus");
				this.OnInvoiceStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="BigInt")]
	public System.Nullable<long> ApprovedBy
	{
		get
		{
			return this._ApprovedBy;
		}
		set
		{
			if ((this._ApprovedBy != value))
			{
				this.OnApprovedByChanging(value);
				this.SendPropertyChanging();
				this._ApprovedBy = value;
				this.SendPropertyChanged("ApprovedBy");
				this.OnApprovedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ApprovedDate
	{
		get
		{
			return this._ApprovedDate;
		}
		set
		{
			if ((this._ApprovedDate != value))
			{
				this.OnApprovedDateChanging(value);
				this.SendPropertyChanging();
				this._ApprovedDate = value;
				this.SendPropertyChanged("ApprovedDate");
				this.OnApprovedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRevised", DbType="Bit")]
	public System.Nullable<bool> IsRevised
	{
		get
		{
			return this._IsRevised;
		}
		set
		{
			if ((this._IsRevised != value))
			{
				this.OnIsRevisedChanging(value);
				this.SendPropertyChanging();
				this._IsRevised = value;
				this.SendPropertyChanged("IsRevised");
				this.OnIsRevisedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
	public System.Nullable<bool> IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProInvoiceId", DbType="BigInt")]
	public System.Nullable<long> ProInvoiceId
	{
		get
		{
			return this._ProInvoiceId;
		}
		set
		{
			if ((this._ProInvoiceId != value))
			{
				if (this._ProformaInvoiceMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProInvoiceIdChanging(value);
				this.SendPropertyChanging();
				this._ProInvoiceId = value;
				this.SendPropertyChanged("ProInvoiceId");
				this.OnProInvoiceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_AttachmentMaster", Storage="_AttachmentMasters", ThisKey="InvoiceId", OtherKey="InvoiceId")]
	public EntitySet<AttachmentMaster> AttachmentMasters
	{
		get
		{
			return this._AttachmentMasters;
		}
		set
		{
			this._AttachmentMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_FollowUpMaster", Storage="_FollowUpMasters", ThisKey="InvoiceId", OtherKey="InvoiceId")]
	public EntitySet<FollowUpMaster> FollowUpMasters
	{
		get
		{
			return this._FollowUpMasters;
		}
		set
		{
			this._FollowUpMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_SentEmail", Storage="_SentEmails", ThisKey="InvoiceId", OtherKey="InvoiceID")]
	public EntitySet<SentEmail> SentEmails
	{
		get
		{
			return this._SentEmails;
		}
		set
		{
			this._SentEmails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_InvoiceDetailsMaster", Storage="_InvoiceDetailsMasters", ThisKey="InvoiceId", OtherKey="InvoiceId")]
	public EntitySet<InvoiceDetailsMaster> InvoiceDetailsMasters
	{
		get
		{
			return this._InvoiceDetailsMasters;
		}
		set
		{
			this._InvoiceDetailsMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_PaymentDetailsMaster", Storage="_PaymentDetailsMasters", ThisKey="InvoiceId", OtherKey="InvoiceNo")]
	public EntitySet<PaymentDetailsMaster> PaymentDetailsMasters
	{
		get
		{
			return this._PaymentDetailsMasters;
		}
		set
		{
			this._PaymentDetailsMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_ProformaInvoiceMaster", Storage="_ProformaInvoiceMasters", ThisKey="InvoiceId", OtherKey="MainInvoiceID")]
	public EntitySet<ProformaInvoiceMaster> ProformaInvoiceMasters
	{
		get
		{
			return this._ProformaInvoiceMasters;
		}
		set
		{
			this._ProformaInvoiceMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_InvoiceMaster", Storage="_ClientMaster", ThisKey="ClientId", OtherKey="ClientId", IsForeignKey=true)]
	public ClientMaster ClientMaster
	{
		get
		{
			return this._ClientMaster.Entity;
		}
		set
		{
			ClientMaster previousValue = this._ClientMaster.Entity;
			if (((previousValue != value) 
						|| (this._ClientMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ClientMaster.Entity = null;
					previousValue.InvoiceMasters.Remove(this);
				}
				this._ClientMaster.Entity = value;
				if ((value != null))
				{
					value.InvoiceMasters.Add(this);
					this._ClientId = value.ClientId;
				}
				else
				{
					this._ClientId = default(long);
				}
				this.SendPropertyChanged("ClientMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProformaInvoiceMaster_InvoiceMaster", Storage="_ProformaInvoiceMaster", ThisKey="ProInvoiceId", OtherKey="ProInvoiceId", IsForeignKey=true)]
	public ProformaInvoiceMaster ProformaInvoiceMaster
	{
		get
		{
			return this._ProformaInvoiceMaster.Entity;
		}
		set
		{
			ProformaInvoiceMaster previousValue = this._ProformaInvoiceMaster.Entity;
			if (((previousValue != value) 
						|| (this._ProformaInvoiceMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProformaInvoiceMaster.Entity = null;
					previousValue.InvoiceMasters.Remove(this);
				}
				this._ProformaInvoiceMaster.Entity = value;
				if ((value != null))
				{
					value.InvoiceMasters.Add(this);
					this._ProInvoiceId = value.ProInvoiceId;
				}
				else
				{
					this._ProInvoiceId = default(Nullable<long>);
				}
				this.SendPropertyChanged("ProformaInvoiceMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_InvoiceMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.InvoiceMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.InvoiceMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_InvoiceMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.InvoiceMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.InvoiceMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AttachmentMasters(AttachmentMaster entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = this;
	}
	
	private void detach_AttachmentMasters(AttachmentMaster entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = null;
	}
	
	private void attach_FollowUpMasters(FollowUpMaster entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = this;
	}
	
	private void detach_FollowUpMasters(FollowUpMaster entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = null;
	}
	
	private void attach_SentEmails(SentEmail entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = this;
	}
	
	private void detach_SentEmails(SentEmail entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = null;
	}
	
	private void attach_InvoiceDetailsMasters(InvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = this;
	}
	
	private void detach_InvoiceDetailsMasters(InvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = null;
	}
	
	private void attach_PaymentDetailsMasters(PaymentDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = this;
	}
	
	private void detach_PaymentDetailsMasters(PaymentDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = null;
	}
	
	private void attach_ProformaInvoiceMasters(ProformaInvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = this;
	}
	
	private void detach_ProformaInvoiceMasters(ProformaInvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.InvoiceMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientMaster")]
public partial class ClientMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ClientId;
	
	private string _ClientName;
	
	private string _PrimaryEmail;
	
	private string _Skype;
	
	private string _Phone;
	
	private string _Mobile;
	
	private string _Fax;
	
	private string _Address1;
	
	private long _Country1;
	
	private long _State1;
	
	private long _City1;
	
	private string _Zip_Postal1;
	
	private string _Address2;
	
	private System.Nullable<long> _Country2;
	
	private System.Nullable<long> _State2;
	
	private System.Nullable<long> _City2;
	
	private string _Zip_Postal2;
	
	private string _Website;
	
	private long _DepartmentId;
	
	private System.Nullable<long> _CurrencyId;
	
	private string _Remarks;
	
	private bool _IsActive;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private string _DefaultRecipient;
	
	private string _DefaultCC;
	
	private System.Nullable<bool> _C_M1;
	
	private System.Nullable<bool> _C_M2;
	
	private string _GSTIN;
	
	private EntitySet<ClientContactMaster> _ClientContactMasters;
	
	private EntitySet<PriceMaster> _PriceMasters;
	
	private EntitySet<InvoiceMaster> _InvoiceMasters;
	
	private EntitySet<ProformaInvoiceMaster> _ProformaInvoiceMasters;
	
	private EntityRef<CityMaster> _CityMaster;
	
	private EntityRef<CityMaster> _CityMaster1;
	
	private EntityRef<CountryMaster> _CountryMaster;
	
	private EntityRef<CountryMaster> _CountryMaster1;
	
	private EntityRef<CurrencyMaster> _CurrencyMaster;
	
	private EntityRef<DepartmentMaster> _DepartmentMaster;
	
	private EntityRef<StateMaster> _StateMaster;
	
	private EntityRef<StateMaster> _StateMaster1;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIdChanging(long value);
    partial void OnClientIdChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnPrimaryEmailChanging(string value);
    partial void OnPrimaryEmailChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnCountry1Changing(long value);
    partial void OnCountry1Changed();
    partial void OnState1Changing(long value);
    partial void OnState1Changed();
    partial void OnCity1Changing(long value);
    partial void OnCity1Changed();
    partial void OnZip_Postal1Changing(string value);
    partial void OnZip_Postal1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCountry2Changing(System.Nullable<long> value);
    partial void OnCountry2Changed();
    partial void OnState2Changing(System.Nullable<long> value);
    partial void OnState2Changed();
    partial void OnCity2Changing(System.Nullable<long> value);
    partial void OnCity2Changed();
    partial void OnZip_Postal2Changing(string value);
    partial void OnZip_Postal2Changed();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnDepartmentIdChanging(long value);
    partial void OnDepartmentIdChanged();
    partial void OnCurrencyIdChanging(System.Nullable<long> value);
    partial void OnCurrencyIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnDefaultRecipientChanging(string value);
    partial void OnDefaultRecipientChanged();
    partial void OnDefaultCCChanging(string value);
    partial void OnDefaultCCChanged();
    partial void OnC_M1Changing(System.Nullable<bool> value);
    partial void OnC_M1Changed();
    partial void OnC_M2Changing(System.Nullable<bool> value);
    partial void OnC_M2Changed();
    partial void OnGSTINChanging(string value);
    partial void OnGSTINChanged();
    #endregion
	
	public ClientMaster()
	{
		this._ClientContactMasters = new EntitySet<ClientContactMaster>(new Action<ClientContactMaster>(this.attach_ClientContactMasters), new Action<ClientContactMaster>(this.detach_ClientContactMasters));
		this._PriceMasters = new EntitySet<PriceMaster>(new Action<PriceMaster>(this.attach_PriceMasters), new Action<PriceMaster>(this.detach_PriceMasters));
		this._InvoiceMasters = new EntitySet<InvoiceMaster>(new Action<InvoiceMaster>(this.attach_InvoiceMasters), new Action<InvoiceMaster>(this.detach_InvoiceMasters));
		this._ProformaInvoiceMasters = new EntitySet<ProformaInvoiceMaster>(new Action<ProformaInvoiceMaster>(this.attach_ProformaInvoiceMasters), new Action<ProformaInvoiceMaster>(this.detach_ProformaInvoiceMasters));
		this._CityMaster = default(EntityRef<CityMaster>);
		this._CityMaster1 = default(EntityRef<CityMaster>);
		this._CountryMaster = default(EntityRef<CountryMaster>);
		this._CountryMaster1 = default(EntityRef<CountryMaster>);
		this._CurrencyMaster = default(EntityRef<CurrencyMaster>);
		this._DepartmentMaster = default(EntityRef<DepartmentMaster>);
		this._StateMaster = default(EntityRef<StateMaster>);
		this._StateMaster1 = default(EntityRef<StateMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ClientId
	{
		get
		{
			return this._ClientId;
		}
		set
		{
			if ((this._ClientId != value))
			{
				this.OnClientIdChanging(value);
				this.SendPropertyChanging();
				this._ClientId = value;
				this.SendPropertyChanged("ClientId");
				this.OnClientIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(600) NOT NULL", CanBeNull=false)]
	public string ClientName
	{
		get
		{
			return this._ClientName;
		}
		set
		{
			if ((this._ClientName != value))
			{
				this.OnClientNameChanging(value);
				this.SendPropertyChanging();
				this._ClientName = value;
				this.SendPropertyChanged("ClientName");
				this.OnClientNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryEmail", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string PrimaryEmail
	{
		get
		{
			return this._PrimaryEmail;
		}
		set
		{
			if ((this._PrimaryEmail != value))
			{
				this.OnPrimaryEmailChanging(value);
				this.SendPropertyChanging();
				this._PrimaryEmail = value;
				this.SendPropertyChanged("PrimaryEmail");
				this.OnPrimaryEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="VarChar(100)")]
	public string Skype
	{
		get
		{
			return this._Skype;
		}
		set
		{
			if ((this._Skype != value))
			{
				this.OnSkypeChanging(value);
				this.SendPropertyChanging();
				this._Skype = value;
				this.SendPropertyChanged("Skype");
				this.OnSkypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(15)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(15)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
	public string Address1
	{
		get
		{
			return this._Address1;
		}
		set
		{
			if ((this._Address1 != value))
			{
				this.OnAddress1Changing(value);
				this.SendPropertyChanging();
				this._Address1 = value;
				this.SendPropertyChanged("Address1");
				this.OnAddress1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country1", DbType="BigInt NOT NULL")]
	public long Country1
	{
		get
		{
			return this._Country1;
		}
		set
		{
			if ((this._Country1 != value))
			{
				if (this._CountryMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCountry1Changing(value);
				this.SendPropertyChanging();
				this._Country1 = value;
				this.SendPropertyChanged("Country1");
				this.OnCountry1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State1", DbType="BigInt NOT NULL")]
	public long State1
	{
		get
		{
			return this._State1;
		}
		set
		{
			if ((this._State1 != value))
			{
				if (this._StateMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnState1Changing(value);
				this.SendPropertyChanging();
				this._State1 = value;
				this.SendPropertyChanged("State1");
				this.OnState1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City1", DbType="BigInt NOT NULL")]
	public long City1
	{
		get
		{
			return this._City1;
		}
		set
		{
			if ((this._City1 != value))
			{
				if (this._CityMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCity1Changing(value);
				this.SendPropertyChanging();
				this._City1 = value;
				this.SendPropertyChanged("City1");
				this.OnCity1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Zip/Postal1]", Storage="_Zip_Postal1", DbType="VarChar(10)")]
	public string Zip_Postal1
	{
		get
		{
			return this._Zip_Postal1;
		}
		set
		{
			if ((this._Zip_Postal1 != value))
			{
				this.OnZip_Postal1Changing(value);
				this.SendPropertyChanging();
				this._Zip_Postal1 = value;
				this.SendPropertyChanged("Zip_Postal1");
				this.OnZip_Postal1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(250)")]
	public string Address2
	{
		get
		{
			return this._Address2;
		}
		set
		{
			if ((this._Address2 != value))
			{
				this.OnAddress2Changing(value);
				this.SendPropertyChanging();
				this._Address2 = value;
				this.SendPropertyChanged("Address2");
				this.OnAddress2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country2", DbType="BigInt")]
	public System.Nullable<long> Country2
	{
		get
		{
			return this._Country2;
		}
		set
		{
			if ((this._Country2 != value))
			{
				if (this._CountryMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCountry2Changing(value);
				this.SendPropertyChanging();
				this._Country2 = value;
				this.SendPropertyChanged("Country2");
				this.OnCountry2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State2", DbType="BigInt")]
	public System.Nullable<long> State2
	{
		get
		{
			return this._State2;
		}
		set
		{
			if ((this._State2 != value))
			{
				if (this._StateMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnState2Changing(value);
				this.SendPropertyChanging();
				this._State2 = value;
				this.SendPropertyChanged("State2");
				this.OnState2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City2", DbType="BigInt")]
	public System.Nullable<long> City2
	{
		get
		{
			return this._City2;
		}
		set
		{
			if ((this._City2 != value))
			{
				if (this._CityMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCity2Changing(value);
				this.SendPropertyChanging();
				this._City2 = value;
				this.SendPropertyChanged("City2");
				this.OnCity2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Zip/Postal2]", Storage="_Zip_Postal2", DbType="VarChar(10)")]
	public string Zip_Postal2
	{
		get
		{
			return this._Zip_Postal2;
		}
		set
		{
			if ((this._Zip_Postal2 != value))
			{
				this.OnZip_Postal2Changing(value);
				this.SendPropertyChanging();
				this._Zip_Postal2 = value;
				this.SendPropertyChanged("Zip_Postal2");
				this.OnZip_Postal2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(250)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt NOT NULL")]
	public long DepartmentId
	{
		get
		{
			return this._DepartmentId;
		}
		set
		{
			if ((this._DepartmentId != value))
			{
				if (this._DepartmentMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDepartmentIdChanging(value);
				this.SendPropertyChanging();
				this._DepartmentId = value;
				this.SendPropertyChanged("DepartmentId");
				this.OnDepartmentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="BigInt")]
	public System.Nullable<long> CurrencyId
	{
		get
		{
			return this._CurrencyId;
		}
		set
		{
			if ((this._CurrencyId != value))
			{
				if (this._CurrencyMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCurrencyIdChanging(value);
				this.SendPropertyChanging();
				this._CurrencyId = value;
				this.SendPropertyChanged("CurrencyId");
				this.OnCurrencyIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(MAX)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultRecipient", DbType="VarChar(150)")]
	public string DefaultRecipient
	{
		get
		{
			return this._DefaultRecipient;
		}
		set
		{
			if ((this._DefaultRecipient != value))
			{
				this.OnDefaultRecipientChanging(value);
				this.SendPropertyChanging();
				this._DefaultRecipient = value;
				this.SendPropertyChanged("DefaultRecipient");
				this.OnDefaultRecipientChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultCC", DbType="VarChar(150)")]
	public string DefaultCC
	{
		get
		{
			return this._DefaultCC;
		}
		set
		{
			if ((this._DefaultCC != value))
			{
				this.OnDefaultCCChanging(value);
				this.SendPropertyChanging();
				this._DefaultCC = value;
				this.SendPropertyChanged("DefaultCC");
				this.OnDefaultCCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_M1", DbType="Bit")]
	public System.Nullable<bool> C_M1
	{
		get
		{
			return this._C_M1;
		}
		set
		{
			if ((this._C_M1 != value))
			{
				this.OnC_M1Changing(value);
				this.SendPropertyChanging();
				this._C_M1 = value;
				this.SendPropertyChanged("C_M1");
				this.OnC_M1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_M2", DbType="Bit")]
	public System.Nullable<bool> C_M2
	{
		get
		{
			return this._C_M2;
		}
		set
		{
			if ((this._C_M2 != value))
			{
				this.OnC_M2Changing(value);
				this.SendPropertyChanging();
				this._C_M2 = value;
				this.SendPropertyChanged("C_M2");
				this.OnC_M2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSTIN", DbType="VarChar(50)")]
	public string GSTIN
	{
		get
		{
			return this._GSTIN;
		}
		set
		{
			if ((this._GSTIN != value))
			{
				this.OnGSTINChanging(value);
				this.SendPropertyChanging();
				this._GSTIN = value;
				this.SendPropertyChanged("GSTIN");
				this.OnGSTINChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_ClientContactMaster", Storage="_ClientContactMasters", ThisKey="ClientId", OtherKey="ClientId")]
	public EntitySet<ClientContactMaster> ClientContactMasters
	{
		get
		{
			return this._ClientContactMasters;
		}
		set
		{
			this._ClientContactMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_PriceMaster", Storage="_PriceMasters", ThisKey="ClientId", OtherKey="ClientId")]
	public EntitySet<PriceMaster> PriceMasters
	{
		get
		{
			return this._PriceMasters;
		}
		set
		{
			this._PriceMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_InvoiceMaster", Storage="_InvoiceMasters", ThisKey="ClientId", OtherKey="ClientId")]
	public EntitySet<InvoiceMaster> InvoiceMasters
	{
		get
		{
			return this._InvoiceMasters;
		}
		set
		{
			this._InvoiceMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_ProformaInvoiceMaster", Storage="_ProformaInvoiceMasters", ThisKey="ClientId", OtherKey="ClientId")]
	public EntitySet<ProformaInvoiceMaster> ProformaInvoiceMasters
	{
		get
		{
			return this._ProformaInvoiceMasters;
		}
		set
		{
			this._ProformaInvoiceMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityMaster_ClientMaster", Storage="_CityMaster", ThisKey="City1", OtherKey="CityId", IsForeignKey=true)]
	public CityMaster CityMaster
	{
		get
		{
			return this._CityMaster.Entity;
		}
		set
		{
			CityMaster previousValue = this._CityMaster.Entity;
			if (((previousValue != value) 
						|| (this._CityMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CityMaster.Entity = null;
					previousValue.ClientMasters.Remove(this);
				}
				this._CityMaster.Entity = value;
				if ((value != null))
				{
					value.ClientMasters.Add(this);
					this._City1 = value.CityId;
				}
				else
				{
					this._City1 = default(long);
				}
				this.SendPropertyChanged("CityMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityMaster_ClientMaster1", Storage="_CityMaster1", ThisKey="City2", OtherKey="CityId", IsForeignKey=true)]
	public CityMaster CityMaster1
	{
		get
		{
			return this._CityMaster1.Entity;
		}
		set
		{
			CityMaster previousValue = this._CityMaster1.Entity;
			if (((previousValue != value) 
						|| (this._CityMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CityMaster1.Entity = null;
					previousValue.ClientMasters1.Remove(this);
				}
				this._CityMaster1.Entity = value;
				if ((value != null))
				{
					value.ClientMasters1.Add(this);
					this._City2 = value.CityId;
				}
				else
				{
					this._City2 = default(Nullable<long>);
				}
				this.SendPropertyChanged("CityMaster1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_ClientMaster", Storage="_CountryMaster", ThisKey="Country1", OtherKey="CountryId", IsForeignKey=true)]
	public CountryMaster CountryMaster
	{
		get
		{
			return this._CountryMaster.Entity;
		}
		set
		{
			CountryMaster previousValue = this._CountryMaster.Entity;
			if (((previousValue != value) 
						|| (this._CountryMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CountryMaster.Entity = null;
					previousValue.ClientMasters.Remove(this);
				}
				this._CountryMaster.Entity = value;
				if ((value != null))
				{
					value.ClientMasters.Add(this);
					this._Country1 = value.CountryId;
				}
				else
				{
					this._Country1 = default(long);
				}
				this.SendPropertyChanged("CountryMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_ClientMaster1", Storage="_CountryMaster1", ThisKey="Country2", OtherKey="CountryId", IsForeignKey=true)]
	public CountryMaster CountryMaster1
	{
		get
		{
			return this._CountryMaster1.Entity;
		}
		set
		{
			CountryMaster previousValue = this._CountryMaster1.Entity;
			if (((previousValue != value) 
						|| (this._CountryMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CountryMaster1.Entity = null;
					previousValue.ClientMasters1.Remove(this);
				}
				this._CountryMaster1.Entity = value;
				if ((value != null))
				{
					value.ClientMasters1.Add(this);
					this._Country2 = value.CountryId;
				}
				else
				{
					this._Country2 = default(Nullable<long>);
				}
				this.SendPropertyChanged("CountryMaster1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyMaster_ClientMaster", Storage="_CurrencyMaster", ThisKey="CurrencyId", OtherKey="CurrencyId", IsForeignKey=true)]
	public CurrencyMaster CurrencyMaster
	{
		get
		{
			return this._CurrencyMaster.Entity;
		}
		set
		{
			CurrencyMaster previousValue = this._CurrencyMaster.Entity;
			if (((previousValue != value) 
						|| (this._CurrencyMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CurrencyMaster.Entity = null;
					previousValue.ClientMasters.Remove(this);
				}
				this._CurrencyMaster.Entity = value;
				if ((value != null))
				{
					value.ClientMasters.Add(this);
					this._CurrencyId = value.CurrencyId;
				}
				else
				{
					this._CurrencyId = default(Nullable<long>);
				}
				this.SendPropertyChanged("CurrencyMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentMaster_ClientMaster", Storage="_DepartmentMaster", ThisKey="DepartmentId", OtherKey="DepartmentId", IsForeignKey=true)]
	public DepartmentMaster DepartmentMaster
	{
		get
		{
			return this._DepartmentMaster.Entity;
		}
		set
		{
			DepartmentMaster previousValue = this._DepartmentMaster.Entity;
			if (((previousValue != value) 
						|| (this._DepartmentMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DepartmentMaster.Entity = null;
					previousValue.ClientMasters.Remove(this);
				}
				this._DepartmentMaster.Entity = value;
				if ((value != null))
				{
					value.ClientMasters.Add(this);
					this._DepartmentId = value.DepartmentId;
				}
				else
				{
					this._DepartmentId = default(long);
				}
				this.SendPropertyChanged("DepartmentMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_ClientMaster", Storage="_StateMaster", ThisKey="State1", OtherKey="StateId", IsForeignKey=true)]
	public StateMaster StateMaster
	{
		get
		{
			return this._StateMaster.Entity;
		}
		set
		{
			StateMaster previousValue = this._StateMaster.Entity;
			if (((previousValue != value) 
						|| (this._StateMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StateMaster.Entity = null;
					previousValue.ClientMasters.Remove(this);
				}
				this._StateMaster.Entity = value;
				if ((value != null))
				{
					value.ClientMasters.Add(this);
					this._State1 = value.StateId;
				}
				else
				{
					this._State1 = default(long);
				}
				this.SendPropertyChanged("StateMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_ClientMaster1", Storage="_StateMaster1", ThisKey="State2", OtherKey="StateId", IsForeignKey=true)]
	public StateMaster StateMaster1
	{
		get
		{
			return this._StateMaster1.Entity;
		}
		set
		{
			StateMaster previousValue = this._StateMaster1.Entity;
			if (((previousValue != value) 
						|| (this._StateMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StateMaster1.Entity = null;
					previousValue.ClientMasters1.Remove(this);
				}
				this._StateMaster1.Entity = value;
				if ((value != null))
				{
					value.ClientMasters1.Add(this);
					this._State2 = value.StateId;
				}
				else
				{
					this._State2 = default(Nullable<long>);
				}
				this.SendPropertyChanged("StateMaster1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ClientMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.ClientMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.ClientMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ClientMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.ClientMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.ClientMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ClientContactMasters(ClientContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.ClientMaster = this;
	}
	
	private void detach_ClientContactMasters(ClientContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.ClientMaster = null;
	}
	
	private void attach_PriceMasters(PriceMaster entity)
	{
		this.SendPropertyChanging();
		entity.ClientMaster = this;
	}
	
	private void detach_PriceMasters(PriceMaster entity)
	{
		this.SendPropertyChanging();
		entity.ClientMaster = null;
	}
	
	private void attach_InvoiceMasters(InvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.ClientMaster = this;
	}
	
	private void detach_InvoiceMasters(InvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.ClientMaster = null;
	}
	
	private void attach_ProformaInvoiceMasters(ProformaInvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.ClientMaster = this;
	}
	
	private void detach_ProformaInvoiceMasters(ProformaInvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.ClientMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProformaInvoiceMaster")]
public partial class ProformaInvoiceMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ProInvoiceId;
	
	private long _ClientId;
	
	private System.Nullable<long> _BusinessUnit;
	
	private long _InvoiceSeqNo;
	
	private System.DateTime _InvoiceDate;
	
	private string _InvoiceNumber;
	
	private string _InvoiceFor;
	
	private string _Revision;
	
	private string _PONumber;
	
	private System.Nullable<System.DateTime> _PODate;
	
	private System.DateTime _InvoiceStartDate;
	
	private System.DateTime _InvoiceEndDate;
	
	private System.Nullable<long> _ProjectFrom;
	
	private string _AttachmentName;
	
	private string _Remarks;
	
	private bool _IsPaid;
	
	private System.Nullable<System.DateTime> _PaidDate;
	
	private string _InvoiceStatus;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private System.Nullable<long> _ApprovedBy;
	
	private System.Nullable<System.DateTime> _ApprovedDate;
	
	private System.Nullable<bool> _IsRevised;
	
	private System.Nullable<bool> _IsDeleted;
	
	private System.Nullable<long> _IsApprovedByInvoice;
	
	private System.Nullable<System.DateTime> _IsApprovedDateInvoice;
	
	private System.Nullable<long> _MainInvoiceID;
	
	private EntitySet<ProformaInvoiceDetailsMaster> _ProformaInvoiceDetailsMasters;
	
	private EntitySet<InvoiceMaster> _InvoiceMasters;
	
	private EntityRef<ClientMaster> _ClientMaster;
	
	private EntityRef<InvoiceMaster> _InvoiceMaster;
	
	private EntityRef<UserMaster> _UserMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProInvoiceIdChanging(long value);
    partial void OnProInvoiceIdChanged();
    partial void OnClientIdChanging(long value);
    partial void OnClientIdChanged();
    partial void OnBusinessUnitChanging(System.Nullable<long> value);
    partial void OnBusinessUnitChanged();
    partial void OnInvoiceSeqNoChanging(long value);
    partial void OnInvoiceSeqNoChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnInvoiceForChanging(string value);
    partial void OnInvoiceForChanged();
    partial void OnRevisionChanging(string value);
    partial void OnRevisionChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnPODateChanging(System.Nullable<System.DateTime> value);
    partial void OnPODateChanged();
    partial void OnInvoiceStartDateChanging(System.DateTime value);
    partial void OnInvoiceStartDateChanged();
    partial void OnInvoiceEndDateChanging(System.DateTime value);
    partial void OnInvoiceEndDateChanged();
    partial void OnProjectFromChanging(System.Nullable<long> value);
    partial void OnProjectFromChanged();
    partial void OnAttachmentNameChanging(string value);
    partial void OnAttachmentNameChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnPaidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaidDateChanged();
    partial void OnInvoiceStatusChanging(string value);
    partial void OnInvoiceStatusChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnApprovedByChanging(System.Nullable<long> value);
    partial void OnApprovedByChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnIsRevisedChanging(System.Nullable<bool> value);
    partial void OnIsRevisedChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnIsApprovedByInvoiceChanging(System.Nullable<long> value);
    partial void OnIsApprovedByInvoiceChanged();
    partial void OnIsApprovedDateInvoiceChanging(System.Nullable<System.DateTime> value);
    partial void OnIsApprovedDateInvoiceChanged();
    partial void OnMainInvoiceIDChanging(System.Nullable<long> value);
    partial void OnMainInvoiceIDChanged();
    #endregion
	
	public ProformaInvoiceMaster()
	{
		this._ProformaInvoiceDetailsMasters = new EntitySet<ProformaInvoiceDetailsMaster>(new Action<ProformaInvoiceDetailsMaster>(this.attach_ProformaInvoiceDetailsMasters), new Action<ProformaInvoiceDetailsMaster>(this.detach_ProformaInvoiceDetailsMasters));
		this._InvoiceMasters = new EntitySet<InvoiceMaster>(new Action<InvoiceMaster>(this.attach_InvoiceMasters), new Action<InvoiceMaster>(this.detach_InvoiceMasters));
		this._ClientMaster = default(EntityRef<ClientMaster>);
		this._InvoiceMaster = default(EntityRef<InvoiceMaster>);
		this._UserMaster = default(EntityRef<UserMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProInvoiceId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ProInvoiceId
	{
		get
		{
			return this._ProInvoiceId;
		}
		set
		{
			if ((this._ProInvoiceId != value))
			{
				this.OnProInvoiceIdChanging(value);
				this.SendPropertyChanging();
				this._ProInvoiceId = value;
				this.SendPropertyChanged("ProInvoiceId");
				this.OnProInvoiceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="BigInt NOT NULL")]
	public long ClientId
	{
		get
		{
			return this._ClientId;
		}
		set
		{
			if ((this._ClientId != value))
			{
				if (this._ClientMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnClientIdChanging(value);
				this.SendPropertyChanging();
				this._ClientId = value;
				this.SendPropertyChanged("ClientId");
				this.OnClientIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessUnit", DbType="BigInt")]
	public System.Nullable<long> BusinessUnit
	{
		get
		{
			return this._BusinessUnit;
		}
		set
		{
			if ((this._BusinessUnit != value))
			{
				this.OnBusinessUnitChanging(value);
				this.SendPropertyChanging();
				this._BusinessUnit = value;
				this.SendPropertyChanged("BusinessUnit");
				this.OnBusinessUnitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceSeqNo", DbType="BigInt NOT NULL")]
	public long InvoiceSeqNo
	{
		get
		{
			return this._InvoiceSeqNo;
		}
		set
		{
			if ((this._InvoiceSeqNo != value))
			{
				this.OnInvoiceSeqNoChanging(value);
				this.SendPropertyChanging();
				this._InvoiceSeqNo = value;
				this.SendPropertyChanged("InvoiceSeqNo");
				this.OnInvoiceSeqNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime NOT NULL")]
	public System.DateTime InvoiceDate
	{
		get
		{
			return this._InvoiceDate;
		}
		set
		{
			if ((this._InvoiceDate != value))
			{
				this.OnInvoiceDateChanging(value);
				this.SendPropertyChanging();
				this._InvoiceDate = value;
				this.SendPropertyChanged("InvoiceDate");
				this.OnInvoiceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string InvoiceNumber
	{
		get
		{
			return this._InvoiceNumber;
		}
		set
		{
			if ((this._InvoiceNumber != value))
			{
				this.OnInvoiceNumberChanging(value);
				this.SendPropertyChanging();
				this._InvoiceNumber = value;
				this.SendPropertyChanged("InvoiceNumber");
				this.OnInvoiceNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceFor", DbType="VarChar(10)")]
	public string InvoiceFor
	{
		get
		{
			return this._InvoiceFor;
		}
		set
		{
			if ((this._InvoiceFor != value))
			{
				this.OnInvoiceForChanging(value);
				this.SendPropertyChanging();
				this._InvoiceFor = value;
				this.SendPropertyChanged("InvoiceFor");
				this.OnInvoiceForChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="VarChar(2)")]
	public string Revision
	{
		get
		{
			return this._Revision;
		}
		set
		{
			if ((this._Revision != value))
			{
				this.OnRevisionChanging(value);
				this.SendPropertyChanging();
				this._Revision = value;
				this.SendPropertyChanged("Revision");
				this.OnRevisionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="VarChar(100)")]
	public string PONumber
	{
		get
		{
			return this._PONumber;
		}
		set
		{
			if ((this._PONumber != value))
			{
				this.OnPONumberChanging(value);
				this.SendPropertyChanging();
				this._PONumber = value;
				this.SendPropertyChanged("PONumber");
				this.OnPONumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODate", DbType="DateTime")]
	public System.Nullable<System.DateTime> PODate
	{
		get
		{
			return this._PODate;
		}
		set
		{
			if ((this._PODate != value))
			{
				this.OnPODateChanging(value);
				this.SendPropertyChanging();
				this._PODate = value;
				this.SendPropertyChanged("PODate");
				this.OnPODateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceStartDate", DbType="DateTime NOT NULL")]
	public System.DateTime InvoiceStartDate
	{
		get
		{
			return this._InvoiceStartDate;
		}
		set
		{
			if ((this._InvoiceStartDate != value))
			{
				this.OnInvoiceStartDateChanging(value);
				this.SendPropertyChanging();
				this._InvoiceStartDate = value;
				this.SendPropertyChanged("InvoiceStartDate");
				this.OnInvoiceStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceEndDate", DbType="DateTime NOT NULL")]
	public System.DateTime InvoiceEndDate
	{
		get
		{
			return this._InvoiceEndDate;
		}
		set
		{
			if ((this._InvoiceEndDate != value))
			{
				this.OnInvoiceEndDateChanging(value);
				this.SendPropertyChanging();
				this._InvoiceEndDate = value;
				this.SendPropertyChanged("InvoiceEndDate");
				this.OnInvoiceEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectFrom", DbType="BigInt")]
	public System.Nullable<long> ProjectFrom
	{
		get
		{
			return this._ProjectFrom;
		}
		set
		{
			if ((this._ProjectFrom != value))
			{
				this.OnProjectFromChanging(value);
				this.SendPropertyChanging();
				this._ProjectFrom = value;
				this.SendPropertyChanged("ProjectFrom");
				this.OnProjectFromChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="VarChar(100)")]
	public string AttachmentName
	{
		get
		{
			return this._AttachmentName;
		}
		set
		{
			if ((this._AttachmentName != value))
			{
				this.OnAttachmentNameChanging(value);
				this.SendPropertyChanging();
				this._AttachmentName = value;
				this.SendPropertyChanged("AttachmentName");
				this.OnAttachmentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(MAX)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
	public bool IsPaid
	{
		get
		{
			return this._IsPaid;
		}
		set
		{
			if ((this._IsPaid != value))
			{
				this.OnIsPaidChanging(value);
				this.SendPropertyChanging();
				this._IsPaid = value;
				this.SendPropertyChanged("IsPaid");
				this.OnIsPaidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> PaidDate
	{
		get
		{
			return this._PaidDate;
		}
		set
		{
			if ((this._PaidDate != value))
			{
				this.OnPaidDateChanging(value);
				this.SendPropertyChanging();
				this._PaidDate = value;
				this.SendPropertyChanged("PaidDate");
				this.OnPaidDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceStatus", DbType="VarChar(15)")]
	public string InvoiceStatus
	{
		get
		{
			return this._InvoiceStatus;
		}
		set
		{
			if ((this._InvoiceStatus != value))
			{
				this.OnInvoiceStatusChanging(value);
				this.SendPropertyChanging();
				this._InvoiceStatus = value;
				this.SendPropertyChanged("InvoiceStatus");
				this.OnInvoiceStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="BigInt")]
	public System.Nullable<long> ApprovedBy
	{
		get
		{
			return this._ApprovedBy;
		}
		set
		{
			if ((this._ApprovedBy != value))
			{
				this.OnApprovedByChanging(value);
				this.SendPropertyChanging();
				this._ApprovedBy = value;
				this.SendPropertyChanged("ApprovedBy");
				this.OnApprovedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ApprovedDate
	{
		get
		{
			return this._ApprovedDate;
		}
		set
		{
			if ((this._ApprovedDate != value))
			{
				this.OnApprovedDateChanging(value);
				this.SendPropertyChanging();
				this._ApprovedDate = value;
				this.SendPropertyChanged("ApprovedDate");
				this.OnApprovedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRevised", DbType="Bit")]
	public System.Nullable<bool> IsRevised
	{
		get
		{
			return this._IsRevised;
		}
		set
		{
			if ((this._IsRevised != value))
			{
				this.OnIsRevisedChanging(value);
				this.SendPropertyChanging();
				this._IsRevised = value;
				this.SendPropertyChanged("IsRevised");
				this.OnIsRevisedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
	public System.Nullable<bool> IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprovedByInvoice", DbType="BigInt")]
	public System.Nullable<long> IsApprovedByInvoice
	{
		get
		{
			return this._IsApprovedByInvoice;
		}
		set
		{
			if ((this._IsApprovedByInvoice != value))
			{
				this.OnIsApprovedByInvoiceChanging(value);
				this.SendPropertyChanging();
				this._IsApprovedByInvoice = value;
				this.SendPropertyChanged("IsApprovedByInvoice");
				this.OnIsApprovedByInvoiceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprovedDateInvoice", DbType="DateTime")]
	public System.Nullable<System.DateTime> IsApprovedDateInvoice
	{
		get
		{
			return this._IsApprovedDateInvoice;
		}
		set
		{
			if ((this._IsApprovedDateInvoice != value))
			{
				this.OnIsApprovedDateInvoiceChanging(value);
				this.SendPropertyChanging();
				this._IsApprovedDateInvoice = value;
				this.SendPropertyChanged("IsApprovedDateInvoice");
				this.OnIsApprovedDateInvoiceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainInvoiceID", DbType="BigInt")]
	public System.Nullable<long> MainInvoiceID
	{
		get
		{
			return this._MainInvoiceID;
		}
		set
		{
			if ((this._MainInvoiceID != value))
			{
				if (this._InvoiceMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMainInvoiceIDChanging(value);
				this.SendPropertyChanging();
				this._MainInvoiceID = value;
				this.SendPropertyChanged("MainInvoiceID");
				this.OnMainInvoiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProformaInvoiceMaster_ProformaInvoiceDetailsMaster", Storage="_ProformaInvoiceDetailsMasters", ThisKey="ProInvoiceId", OtherKey="ProInvoiceId")]
	public EntitySet<ProformaInvoiceDetailsMaster> ProformaInvoiceDetailsMasters
	{
		get
		{
			return this._ProformaInvoiceDetailsMasters;
		}
		set
		{
			this._ProformaInvoiceDetailsMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProformaInvoiceMaster_InvoiceMaster", Storage="_InvoiceMasters", ThisKey="ProInvoiceId", OtherKey="ProInvoiceId")]
	public EntitySet<InvoiceMaster> InvoiceMasters
	{
		get
		{
			return this._InvoiceMasters;
		}
		set
		{
			this._InvoiceMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_ProformaInvoiceMaster", Storage="_ClientMaster", ThisKey="ClientId", OtherKey="ClientId", IsForeignKey=true)]
	public ClientMaster ClientMaster
	{
		get
		{
			return this._ClientMaster.Entity;
		}
		set
		{
			ClientMaster previousValue = this._ClientMaster.Entity;
			if (((previousValue != value) 
						|| (this._ClientMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ClientMaster.Entity = null;
					previousValue.ProformaInvoiceMasters.Remove(this);
				}
				this._ClientMaster.Entity = value;
				if ((value != null))
				{
					value.ProformaInvoiceMasters.Add(this);
					this._ClientId = value.ClientId;
				}
				else
				{
					this._ClientId = default(long);
				}
				this.SendPropertyChanged("ClientMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceMaster_ProformaInvoiceMaster", Storage="_InvoiceMaster", ThisKey="MainInvoiceID", OtherKey="InvoiceId", IsForeignKey=true)]
	public InvoiceMaster InvoiceMaster
	{
		get
		{
			return this._InvoiceMaster.Entity;
		}
		set
		{
			InvoiceMaster previousValue = this._InvoiceMaster.Entity;
			if (((previousValue != value) 
						|| (this._InvoiceMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._InvoiceMaster.Entity = null;
					previousValue.ProformaInvoiceMasters.Remove(this);
				}
				this._InvoiceMaster.Entity = value;
				if ((value != null))
				{
					value.ProformaInvoiceMasters.Add(this);
					this._MainInvoiceID = value.InvoiceId;
				}
				else
				{
					this._MainInvoiceID = default(Nullable<long>);
				}
				this.SendPropertyChanged("InvoiceMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProformaInvoiceMaster", Storage="_UserMaster", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster
	{
		get
		{
			return this._UserMaster.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster.Entity = null;
					previousValue.ProformaInvoiceMasters.Remove(this);
				}
				this._UserMaster.Entity = value;
				if ((value != null))
				{
					value.ProformaInvoiceMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProformaInvoiceMaster1", Storage="_UserMaster1", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.ProformaInvoiceMasters1.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.ProformaInvoiceMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ProformaInvoiceDetailsMasters(ProformaInvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.ProformaInvoiceMaster = this;
	}
	
	private void detach_ProformaInvoiceDetailsMasters(ProformaInvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.ProformaInvoiceMaster = null;
	}
	
	private void attach_InvoiceMasters(InvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.ProformaInvoiceMaster = this;
	}
	
	private void detach_InvoiceMasters(InvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.ProformaInvoiceMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMaster")]
public partial class UserMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _UserId;
	
	private long _EmpId;
	
	private string _FirstName;
	
	private string _MiddleName;
	
	private string _LastName;
	
	private long _DepartmentId;
	
	private string _Designation;
	
	private string _Email;
	
	private string _Contact;
	
	private string _UserType;
	
	private string _UserName;
	
	private System.Data.Linq.Binary _Password;
	
	private bool _IsActive;
	
	private System.Nullable<long> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<long> _ModifyBy;
	
	private System.Nullable<System.DateTime> _ModifyDate;
	
	private System.Nullable<bool> _U_M1;
	
	private System.Nullable<bool> _U_M2;
	
	private System.Nullable<bool> _IsUserSentEmail;
	
	private System.Nullable<bool> _ProformaApproveAccess;
	
	private EntitySet<AttachmentMaster> _AttachmentMasters;
	
	private EntitySet<CityMaster> _CityMasters;
	
	private EntitySet<CityMaster> _CityMasters1;
	
	private EntitySet<ClientContactMaster> _ClientContactMasters;
	
	private EntitySet<ClientContactMaster> _ClientContactMasters1;
	
	private EntitySet<CountryMaster> _CountryMasters;
	
	private EntitySet<CountryMaster> _CountryMasters1;
	
	private EntitySet<CurrencyMaster> _CurrencyMasters;
	
	private EntitySet<CurrencyMaster> _CurrencyMasters1;
	
	private EntitySet<DepartmentMaster> _DepartmentMasters;
	
	private EntitySet<DepartmentMaster> _DepartmentMasters1;
	
	private EntitySet<DepartmentMaster> _DepartmentMasters2;
	
	private EntitySet<FollowUpMaster> _FollowUpMasters;
	
	private EntitySet<PriceMaster> _PriceMasters;
	
	private EntitySet<PriceMaster> _PriceMasters1;
	
	private EntitySet<PriceTypeMaster> _PriceTypeMasters;
	
	private EntitySet<PriceTypeMaster> _PriceTypeMasters1;
	
	private EntitySet<ProcessMaster> _ProcessMasters;
	
	private EntitySet<ProcessMaster> _ProcessMasters1;
	
	private EntitySet<StateMaster> _StateMasters;
	
	private EntitySet<StateMaster> _StateMasters1;
	
	private EntitySet<SentEmail> _SentEmails;
	
	private EntitySet<PriceTypeNew> _PriceTypeNews;
	
	private EntitySet<PriceTypeNew> _PriceTypeNews1;
	
	private EntitySet<ProformaInvoiceDetailsMaster> _ProformaInvoiceDetailsMasters;
	
	private EntitySet<ProformaInvoiceDetailsMaster> _ProformaInvoiceDetailsMasters1;
	
	private EntitySet<Individual_ContactMaster> _Individual_ContactMasters;
	
	private EntitySet<Individual_ContactMaster> _Individual_ContactMasters1;
	
	private EntitySet<InvoiceDetailsMaster> _InvoiceDetailsMasters;
	
	private EntitySet<InvoiceDetailsMaster> _InvoiceDetailsMasters1;
	
	private EntitySet<CompanyMaster> _CompanyMasters;
	
	private EntitySet<CompanyMaster> _CompanyMasters1;
	
	private EntitySet<InvoiceMaster> _InvoiceMasters;
	
	private EntitySet<InvoiceMaster> _InvoiceMasters1;
	
	private EntitySet<ClientMaster> _ClientMasters;
	
	private EntitySet<ClientMaster> _ClientMasters1;
	
	private EntitySet<ProformaInvoiceMaster> _ProformaInvoiceMasters;
	
	private EntitySet<ProformaInvoiceMaster> _ProformaInvoiceMasters1;
	
	private EntitySet<UserMaster> _UserMasters;
	
	private EntitySet<UserMaster> _UserMasters1;
	
	private EntityRef<DepartmentMaster> _DepartmentMaster;
	
	private EntityRef<UserMaster> _UserMaster1;
	
	private EntityRef<UserMaster> _UserMaster2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnEmpIdChanging(long value);
    partial void OnEmpIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDepartmentIdChanging(long value);
    partial void OnDepartmentIdChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(System.Data.Linq.Binary value);
    partial void OnPasswordChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifyByChanging(System.Nullable<long> value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnU_M1Changing(System.Nullable<bool> value);
    partial void OnU_M1Changed();
    partial void OnU_M2Changing(System.Nullable<bool> value);
    partial void OnU_M2Changed();
    partial void OnIsUserSentEmailChanging(System.Nullable<bool> value);
    partial void OnIsUserSentEmailChanged();
    partial void OnProformaApproveAccessChanging(System.Nullable<bool> value);
    partial void OnProformaApproveAccessChanged();
    #endregion
	
	public UserMaster()
	{
		this._AttachmentMasters = new EntitySet<AttachmentMaster>(new Action<AttachmentMaster>(this.attach_AttachmentMasters), new Action<AttachmentMaster>(this.detach_AttachmentMasters));
		this._CityMasters = new EntitySet<CityMaster>(new Action<CityMaster>(this.attach_CityMasters), new Action<CityMaster>(this.detach_CityMasters));
		this._CityMasters1 = new EntitySet<CityMaster>(new Action<CityMaster>(this.attach_CityMasters1), new Action<CityMaster>(this.detach_CityMasters1));
		this._ClientContactMasters = new EntitySet<ClientContactMaster>(new Action<ClientContactMaster>(this.attach_ClientContactMasters), new Action<ClientContactMaster>(this.detach_ClientContactMasters));
		this._ClientContactMasters1 = new EntitySet<ClientContactMaster>(new Action<ClientContactMaster>(this.attach_ClientContactMasters1), new Action<ClientContactMaster>(this.detach_ClientContactMasters1));
		this._CountryMasters = new EntitySet<CountryMaster>(new Action<CountryMaster>(this.attach_CountryMasters), new Action<CountryMaster>(this.detach_CountryMasters));
		this._CountryMasters1 = new EntitySet<CountryMaster>(new Action<CountryMaster>(this.attach_CountryMasters1), new Action<CountryMaster>(this.detach_CountryMasters1));
		this._CurrencyMasters = new EntitySet<CurrencyMaster>(new Action<CurrencyMaster>(this.attach_CurrencyMasters), new Action<CurrencyMaster>(this.detach_CurrencyMasters));
		this._CurrencyMasters1 = new EntitySet<CurrencyMaster>(new Action<CurrencyMaster>(this.attach_CurrencyMasters1), new Action<CurrencyMaster>(this.detach_CurrencyMasters1));
		this._DepartmentMasters = new EntitySet<DepartmentMaster>(new Action<DepartmentMaster>(this.attach_DepartmentMasters), new Action<DepartmentMaster>(this.detach_DepartmentMasters));
		this._DepartmentMasters1 = new EntitySet<DepartmentMaster>(new Action<DepartmentMaster>(this.attach_DepartmentMasters1), new Action<DepartmentMaster>(this.detach_DepartmentMasters1));
		this._DepartmentMasters2 = new EntitySet<DepartmentMaster>(new Action<DepartmentMaster>(this.attach_DepartmentMasters2), new Action<DepartmentMaster>(this.detach_DepartmentMasters2));
		this._FollowUpMasters = new EntitySet<FollowUpMaster>(new Action<FollowUpMaster>(this.attach_FollowUpMasters), new Action<FollowUpMaster>(this.detach_FollowUpMasters));
		this._PriceMasters = new EntitySet<PriceMaster>(new Action<PriceMaster>(this.attach_PriceMasters), new Action<PriceMaster>(this.detach_PriceMasters));
		this._PriceMasters1 = new EntitySet<PriceMaster>(new Action<PriceMaster>(this.attach_PriceMasters1), new Action<PriceMaster>(this.detach_PriceMasters1));
		this._PriceTypeMasters = new EntitySet<PriceTypeMaster>(new Action<PriceTypeMaster>(this.attach_PriceTypeMasters), new Action<PriceTypeMaster>(this.detach_PriceTypeMasters));
		this._PriceTypeMasters1 = new EntitySet<PriceTypeMaster>(new Action<PriceTypeMaster>(this.attach_PriceTypeMasters1), new Action<PriceTypeMaster>(this.detach_PriceTypeMasters1));
		this._ProcessMasters = new EntitySet<ProcessMaster>(new Action<ProcessMaster>(this.attach_ProcessMasters), new Action<ProcessMaster>(this.detach_ProcessMasters));
		this._ProcessMasters1 = new EntitySet<ProcessMaster>(new Action<ProcessMaster>(this.attach_ProcessMasters1), new Action<ProcessMaster>(this.detach_ProcessMasters1));
		this._StateMasters = new EntitySet<StateMaster>(new Action<StateMaster>(this.attach_StateMasters), new Action<StateMaster>(this.detach_StateMasters));
		this._StateMasters1 = new EntitySet<StateMaster>(new Action<StateMaster>(this.attach_StateMasters1), new Action<StateMaster>(this.detach_StateMasters1));
		this._SentEmails = new EntitySet<SentEmail>(new Action<SentEmail>(this.attach_SentEmails), new Action<SentEmail>(this.detach_SentEmails));
		this._PriceTypeNews = new EntitySet<PriceTypeNew>(new Action<PriceTypeNew>(this.attach_PriceTypeNews), new Action<PriceTypeNew>(this.detach_PriceTypeNews));
		this._PriceTypeNews1 = new EntitySet<PriceTypeNew>(new Action<PriceTypeNew>(this.attach_PriceTypeNews1), new Action<PriceTypeNew>(this.detach_PriceTypeNews1));
		this._ProformaInvoiceDetailsMasters = new EntitySet<ProformaInvoiceDetailsMaster>(new Action<ProformaInvoiceDetailsMaster>(this.attach_ProformaInvoiceDetailsMasters), new Action<ProformaInvoiceDetailsMaster>(this.detach_ProformaInvoiceDetailsMasters));
		this._ProformaInvoiceDetailsMasters1 = new EntitySet<ProformaInvoiceDetailsMaster>(new Action<ProformaInvoiceDetailsMaster>(this.attach_ProformaInvoiceDetailsMasters1), new Action<ProformaInvoiceDetailsMaster>(this.detach_ProformaInvoiceDetailsMasters1));
		this._Individual_ContactMasters = new EntitySet<Individual_ContactMaster>(new Action<Individual_ContactMaster>(this.attach_Individual_ContactMasters), new Action<Individual_ContactMaster>(this.detach_Individual_ContactMasters));
		this._Individual_ContactMasters1 = new EntitySet<Individual_ContactMaster>(new Action<Individual_ContactMaster>(this.attach_Individual_ContactMasters1), new Action<Individual_ContactMaster>(this.detach_Individual_ContactMasters1));
		this._InvoiceDetailsMasters = new EntitySet<InvoiceDetailsMaster>(new Action<InvoiceDetailsMaster>(this.attach_InvoiceDetailsMasters), new Action<InvoiceDetailsMaster>(this.detach_InvoiceDetailsMasters));
		this._InvoiceDetailsMasters1 = new EntitySet<InvoiceDetailsMaster>(new Action<InvoiceDetailsMaster>(this.attach_InvoiceDetailsMasters1), new Action<InvoiceDetailsMaster>(this.detach_InvoiceDetailsMasters1));
		this._CompanyMasters = new EntitySet<CompanyMaster>(new Action<CompanyMaster>(this.attach_CompanyMasters), new Action<CompanyMaster>(this.detach_CompanyMasters));
		this._CompanyMasters1 = new EntitySet<CompanyMaster>(new Action<CompanyMaster>(this.attach_CompanyMasters1), new Action<CompanyMaster>(this.detach_CompanyMasters1));
		this._InvoiceMasters = new EntitySet<InvoiceMaster>(new Action<InvoiceMaster>(this.attach_InvoiceMasters), new Action<InvoiceMaster>(this.detach_InvoiceMasters));
		this._InvoiceMasters1 = new EntitySet<InvoiceMaster>(new Action<InvoiceMaster>(this.attach_InvoiceMasters1), new Action<InvoiceMaster>(this.detach_InvoiceMasters1));
		this._ClientMasters = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters), new Action<ClientMaster>(this.detach_ClientMasters));
		this._ClientMasters1 = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters1), new Action<ClientMaster>(this.detach_ClientMasters1));
		this._ProformaInvoiceMasters = new EntitySet<ProformaInvoiceMaster>(new Action<ProformaInvoiceMaster>(this.attach_ProformaInvoiceMasters), new Action<ProformaInvoiceMaster>(this.detach_ProformaInvoiceMasters));
		this._ProformaInvoiceMasters1 = new EntitySet<ProformaInvoiceMaster>(new Action<ProformaInvoiceMaster>(this.attach_ProformaInvoiceMasters1), new Action<ProformaInvoiceMaster>(this.detach_ProformaInvoiceMasters1));
		this._UserMasters = new EntitySet<UserMaster>(new Action<UserMaster>(this.attach_UserMasters), new Action<UserMaster>(this.detach_UserMasters));
		this._UserMasters1 = new EntitySet<UserMaster>(new Action<UserMaster>(this.attach_UserMasters1), new Action<UserMaster>(this.detach_UserMasters1));
		this._DepartmentMaster = default(EntityRef<DepartmentMaster>);
		this._UserMaster1 = default(EntityRef<UserMaster>);
		this._UserMaster2 = default(EntityRef<UserMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="BigInt NOT NULL")]
	public long EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				this.OnEmpIdChanging(value);
				this.SendPropertyChanging();
				this._EmpId = value;
				this.SendPropertyChanged("EmpId");
				this.OnEmpIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(20)")]
	public string MiddleName
	{
		get
		{
			return this._MiddleName;
		}
		set
		{
			if ((this._MiddleName != value))
			{
				this.OnMiddleNameChanging(value);
				this.SendPropertyChanging();
				this._MiddleName = value;
				this.SendPropertyChanged("MiddleName");
				this.OnMiddleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="BigInt NOT NULL")]
	public long DepartmentId
	{
		get
		{
			return this._DepartmentId;
		}
		set
		{
			if ((this._DepartmentId != value))
			{
				if (this._DepartmentMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDepartmentIdChanging(value);
				this.SendPropertyChanging();
				this._DepartmentId = value;
				this.SendPropertyChanged("DepartmentId");
				this.OnDepartmentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(50)")]
	public string Designation
	{
		get
		{
			return this._Designation;
		}
		set
		{
			if ((this._Designation != value))
			{
				this.OnDesignationChanging(value);
				this.SendPropertyChanging();
				this._Designation = value;
				this.SendPropertyChanged("Designation");
				this.OnDesignationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="VarChar(13)")]
	public string Contact
	{
		get
		{
			return this._Contact;
		}
		set
		{
			if ((this._Contact != value))
			{
				this.OnContactChanging(value);
				this.SendPropertyChanging();
				this._Contact = value;
				this.SendPropertyChanged("Contact");
				this.OnContactChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string UserType
	{
		get
		{
			return this._UserType;
		}
		set
		{
			if ((this._UserType != value))
			{
				this.OnUserTypeChanging(value);
				this.SendPropertyChanging();
				this._UserType = value;
				this.SendPropertyChanged("UserType");
				this.OnUserTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt")]
	public System.Nullable<long> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				if (this._UserMaster1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="BigInt")]
	public System.Nullable<long> ModifyBy
	{
		get
		{
			return this._ModifyBy;
		}
		set
		{
			if ((this._ModifyBy != value))
			{
				if (this._UserMaster2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifyByChanging(value);
				this.SendPropertyChanging();
				this._ModifyBy = value;
				this.SendPropertyChanged("ModifyBy");
				this.OnModifyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifyDate
	{
		get
		{
			return this._ModifyDate;
		}
		set
		{
			if ((this._ModifyDate != value))
			{
				this.OnModifyDateChanging(value);
				this.SendPropertyChanging();
				this._ModifyDate = value;
				this.SendPropertyChanged("ModifyDate");
				this.OnModifyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_M1", DbType="Bit")]
	public System.Nullable<bool> U_M1
	{
		get
		{
			return this._U_M1;
		}
		set
		{
			if ((this._U_M1 != value))
			{
				this.OnU_M1Changing(value);
				this.SendPropertyChanging();
				this._U_M1 = value;
				this.SendPropertyChanged("U_M1");
				this.OnU_M1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_M2", DbType="Bit")]
	public System.Nullable<bool> U_M2
	{
		get
		{
			return this._U_M2;
		}
		set
		{
			if ((this._U_M2 != value))
			{
				this.OnU_M2Changing(value);
				this.SendPropertyChanging();
				this._U_M2 = value;
				this.SendPropertyChanged("U_M2");
				this.OnU_M2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUserSentEmail", DbType="Bit")]
	public System.Nullable<bool> IsUserSentEmail
	{
		get
		{
			return this._IsUserSentEmail;
		}
		set
		{
			if ((this._IsUserSentEmail != value))
			{
				this.OnIsUserSentEmailChanging(value);
				this.SendPropertyChanging();
				this._IsUserSentEmail = value;
				this.SendPropertyChanged("IsUserSentEmail");
				this.OnIsUserSentEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProformaApproveAccess", DbType="Bit")]
	public System.Nullable<bool> ProformaApproveAccess
	{
		get
		{
			return this._ProformaApproveAccess;
		}
		set
		{
			if ((this._ProformaApproveAccess != value))
			{
				this.OnProformaApproveAccessChanging(value);
				this.SendPropertyChanging();
				this._ProformaApproveAccess = value;
				this.SendPropertyChanged("ProformaApproveAccess");
				this.OnProformaApproveAccessChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_AttachmentMaster", Storage="_AttachmentMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<AttachmentMaster> AttachmentMasters
	{
		get
		{
			return this._AttachmentMasters;
		}
		set
		{
			this._AttachmentMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CityMaster", Storage="_CityMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<CityMaster> CityMasters
	{
		get
		{
			return this._CityMasters;
		}
		set
		{
			this._CityMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CityMaster1", Storage="_CityMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<CityMaster> CityMasters1
	{
		get
		{
			return this._CityMasters1;
		}
		set
		{
			this._CityMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ClientContactMaster", Storage="_ClientContactMasters", ThisKey="UserId", OtherKey="CratedBy")]
	public EntitySet<ClientContactMaster> ClientContactMasters
	{
		get
		{
			return this._ClientContactMasters;
		}
		set
		{
			this._ClientContactMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ClientContactMaster1", Storage="_ClientContactMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<ClientContactMaster> ClientContactMasters1
	{
		get
		{
			return this._ClientContactMasters1;
		}
		set
		{
			this._ClientContactMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CountryMaster", Storage="_CountryMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<CountryMaster> CountryMasters
	{
		get
		{
			return this._CountryMasters;
		}
		set
		{
			this._CountryMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CountryMaster1", Storage="_CountryMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<CountryMaster> CountryMasters1
	{
		get
		{
			return this._CountryMasters1;
		}
		set
		{
			this._CountryMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CurrencyMaster", Storage="_CurrencyMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<CurrencyMaster> CurrencyMasters
	{
		get
		{
			return this._CurrencyMasters;
		}
		set
		{
			this._CurrencyMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CurrencyMaster1", Storage="_CurrencyMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<CurrencyMaster> CurrencyMasters1
	{
		get
		{
			return this._CurrencyMasters1;
		}
		set
		{
			this._CurrencyMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_DepartmentMaster", Storage="_DepartmentMasters", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<DepartmentMaster> DepartmentMasters
	{
		get
		{
			return this._DepartmentMasters;
		}
		set
		{
			this._DepartmentMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_DepartmentMaster1", Storage="_DepartmentMasters1", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<DepartmentMaster> DepartmentMasters1
	{
		get
		{
			return this._DepartmentMasters1;
		}
		set
		{
			this._DepartmentMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_DepartmentMaster2", Storage="_DepartmentMasters2", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<DepartmentMaster> DepartmentMasters2
	{
		get
		{
			return this._DepartmentMasters2;
		}
		set
		{
			this._DepartmentMasters2.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_FollowUpMaster", Storage="_FollowUpMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<FollowUpMaster> FollowUpMasters
	{
		get
		{
			return this._FollowUpMasters;
		}
		set
		{
			this._FollowUpMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceMaster", Storage="_PriceMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<PriceMaster> PriceMasters
	{
		get
		{
			return this._PriceMasters;
		}
		set
		{
			this._PriceMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceMaster1", Storage="_PriceMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<PriceMaster> PriceMasters1
	{
		get
		{
			return this._PriceMasters1;
		}
		set
		{
			this._PriceMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceTypeMaster", Storage="_PriceTypeMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<PriceTypeMaster> PriceTypeMasters
	{
		get
		{
			return this._PriceTypeMasters;
		}
		set
		{
			this._PriceTypeMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceTypeMaster1", Storage="_PriceTypeMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<PriceTypeMaster> PriceTypeMasters1
	{
		get
		{
			return this._PriceTypeMasters1;
		}
		set
		{
			this._PriceTypeMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProcessMaster", Storage="_ProcessMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<ProcessMaster> ProcessMasters
	{
		get
		{
			return this._ProcessMasters;
		}
		set
		{
			this._ProcessMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProcessMaster1", Storage="_ProcessMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<ProcessMaster> ProcessMasters1
	{
		get
		{
			return this._ProcessMasters1;
		}
		set
		{
			this._ProcessMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_StateMaster", Storage="_StateMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<StateMaster> StateMasters
	{
		get
		{
			return this._StateMasters;
		}
		set
		{
			this._StateMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_StateMaster1", Storage="_StateMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<StateMaster> StateMasters1
	{
		get
		{
			return this._StateMasters1;
		}
		set
		{
			this._StateMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_SentEmail", Storage="_SentEmails", ThisKey="UserId", OtherKey="MailSentBy")]
	public EntitySet<SentEmail> SentEmails
	{
		get
		{
			return this._SentEmails;
		}
		set
		{
			this._SentEmails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceTypeNew", Storage="_PriceTypeNews", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<PriceTypeNew> PriceTypeNews
	{
		get
		{
			return this._PriceTypeNews;
		}
		set
		{
			this._PriceTypeNews.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_PriceTypeNew1", Storage="_PriceTypeNews1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<PriceTypeNew> PriceTypeNews1
	{
		get
		{
			return this._PriceTypeNews1;
		}
		set
		{
			this._PriceTypeNews1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProformaInvoiceDetailsMaster", Storage="_ProformaInvoiceDetailsMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<ProformaInvoiceDetailsMaster> ProformaInvoiceDetailsMasters
	{
		get
		{
			return this._ProformaInvoiceDetailsMasters;
		}
		set
		{
			this._ProformaInvoiceDetailsMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProformaInvoiceDetailsMaster1", Storage="_ProformaInvoiceDetailsMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<ProformaInvoiceDetailsMaster> ProformaInvoiceDetailsMasters1
	{
		get
		{
			return this._ProformaInvoiceDetailsMasters1;
		}
		set
		{
			this._ProformaInvoiceDetailsMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_Individual_ContactMaster", Storage="_Individual_ContactMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<Individual_ContactMaster> Individual_ContactMasters
	{
		get
		{
			return this._Individual_ContactMasters;
		}
		set
		{
			this._Individual_ContactMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_Individual_ContactMaster1", Storage="_Individual_ContactMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<Individual_ContactMaster> Individual_ContactMasters1
	{
		get
		{
			return this._Individual_ContactMasters1;
		}
		set
		{
			this._Individual_ContactMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_InvoiceDetailsMaster", Storage="_InvoiceDetailsMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<InvoiceDetailsMaster> InvoiceDetailsMasters
	{
		get
		{
			return this._InvoiceDetailsMasters;
		}
		set
		{
			this._InvoiceDetailsMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_InvoiceDetailsMaster1", Storage="_InvoiceDetailsMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<InvoiceDetailsMaster> InvoiceDetailsMasters1
	{
		get
		{
			return this._InvoiceDetailsMasters1;
		}
		set
		{
			this._InvoiceDetailsMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CompanyMaster", Storage="_CompanyMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<CompanyMaster> CompanyMasters
	{
		get
		{
			return this._CompanyMasters;
		}
		set
		{
			this._CompanyMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_CompanyMaster1", Storage="_CompanyMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<CompanyMaster> CompanyMasters1
	{
		get
		{
			return this._CompanyMasters1;
		}
		set
		{
			this._CompanyMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_InvoiceMaster", Storage="_InvoiceMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<InvoiceMaster> InvoiceMasters
	{
		get
		{
			return this._InvoiceMasters;
		}
		set
		{
			this._InvoiceMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_InvoiceMaster1", Storage="_InvoiceMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<InvoiceMaster> InvoiceMasters1
	{
		get
		{
			return this._InvoiceMasters1;
		}
		set
		{
			this._InvoiceMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ClientMaster", Storage="_ClientMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<ClientMaster> ClientMasters
	{
		get
		{
			return this._ClientMasters;
		}
		set
		{
			this._ClientMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ClientMaster1", Storage="_ClientMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<ClientMaster> ClientMasters1
	{
		get
		{
			return this._ClientMasters1;
		}
		set
		{
			this._ClientMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProformaInvoiceMaster", Storage="_ProformaInvoiceMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<ProformaInvoiceMaster> ProformaInvoiceMasters
	{
		get
		{
			return this._ProformaInvoiceMasters;
		}
		set
		{
			this._ProformaInvoiceMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_ProformaInvoiceMaster1", Storage="_ProformaInvoiceMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<ProformaInvoiceMaster> ProformaInvoiceMasters1
	{
		get
		{
			return this._ProformaInvoiceMasters1;
		}
		set
		{
			this._ProformaInvoiceMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_UserMaster", Storage="_UserMasters", ThisKey="UserId", OtherKey="CreatedBy")]
	public EntitySet<UserMaster> UserMasters
	{
		get
		{
			return this._UserMasters;
		}
		set
		{
			this._UserMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_UserMaster1", Storage="_UserMasters1", ThisKey="UserId", OtherKey="ModifyBy")]
	public EntitySet<UserMaster> UserMasters1
	{
		get
		{
			return this._UserMasters1;
		}
		set
		{
			this._UserMasters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentMaster_UserMaster", Storage="_DepartmentMaster", ThisKey="DepartmentId", OtherKey="DepartmentId", IsForeignKey=true)]
	public DepartmentMaster DepartmentMaster
	{
		get
		{
			return this._DepartmentMaster.Entity;
		}
		set
		{
			DepartmentMaster previousValue = this._DepartmentMaster.Entity;
			if (((previousValue != value) 
						|| (this._DepartmentMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DepartmentMaster.Entity = null;
					previousValue.UserMasters.Remove(this);
				}
				this._DepartmentMaster.Entity = value;
				if ((value != null))
				{
					value.UserMasters.Add(this);
					this._DepartmentId = value.DepartmentId;
				}
				else
				{
					this._DepartmentId = default(long);
				}
				this.SendPropertyChanged("DepartmentMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_UserMaster", Storage="_UserMaster1", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster1
	{
		get
		{
			return this._UserMaster1.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster1.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster1.Entity = null;
					previousValue.UserMasters.Remove(this);
				}
				this._UserMaster1.Entity = value;
				if ((value != null))
				{
					value.UserMasters.Add(this);
					this._CreatedBy = value.UserId;
				}
				else
				{
					this._CreatedBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMaster_UserMaster1", Storage="_UserMaster2", ThisKey="ModifyBy", OtherKey="UserId", IsForeignKey=true)]
	public UserMaster UserMaster2
	{
		get
		{
			return this._UserMaster2.Entity;
		}
		set
		{
			UserMaster previousValue = this._UserMaster2.Entity;
			if (((previousValue != value) 
						|| (this._UserMaster2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserMaster2.Entity = null;
					previousValue.UserMasters1.Remove(this);
				}
				this._UserMaster2.Entity = value;
				if ((value != null))
				{
					value.UserMasters1.Add(this);
					this._ModifyBy = value.UserId;
				}
				else
				{
					this._ModifyBy = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserMaster2");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AttachmentMasters(AttachmentMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_AttachmentMasters(AttachmentMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_CityMasters1(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_CityMasters1(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_ClientContactMasters(ClientContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_ClientContactMasters(ClientContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_ClientContactMasters1(ClientContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_ClientContactMasters1(ClientContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_CountryMasters(CountryMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_CountryMasters(CountryMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_CountryMasters1(CountryMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_CountryMasters1(CountryMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_CurrencyMasters(CurrencyMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_CurrencyMasters(CurrencyMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_CurrencyMasters1(CurrencyMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_CurrencyMasters1(CurrencyMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_DepartmentMasters(DepartmentMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_DepartmentMasters(DepartmentMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_DepartmentMasters1(DepartmentMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_DepartmentMasters1(DepartmentMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_DepartmentMasters2(DepartmentMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster2 = this;
	}
	
	private void detach_DepartmentMasters2(DepartmentMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster2 = null;
	}
	
	private void attach_FollowUpMasters(FollowUpMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_FollowUpMasters(FollowUpMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_PriceMasters(PriceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_PriceMasters(PriceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_PriceMasters1(PriceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_PriceMasters1(PriceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_PriceTypeMasters(PriceTypeMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_PriceTypeMasters(PriceTypeMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_PriceTypeMasters1(PriceTypeMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_PriceTypeMasters1(PriceTypeMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_ProcessMasters(ProcessMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_ProcessMasters(ProcessMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_ProcessMasters1(ProcessMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_ProcessMasters1(ProcessMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_StateMasters(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_StateMasters(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_StateMasters1(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_StateMasters1(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_SentEmails(SentEmail entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_SentEmails(SentEmail entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_PriceTypeNews(PriceTypeNew entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_PriceTypeNews(PriceTypeNew entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_PriceTypeNews1(PriceTypeNew entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_PriceTypeNews1(PriceTypeNew entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_ProformaInvoiceDetailsMasters(ProformaInvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_ProformaInvoiceDetailsMasters(ProformaInvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_ProformaInvoiceDetailsMasters1(ProformaInvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_ProformaInvoiceDetailsMasters1(ProformaInvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_Individual_ContactMasters(Individual_ContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_Individual_ContactMasters(Individual_ContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_Individual_ContactMasters1(Individual_ContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_Individual_ContactMasters1(Individual_ContactMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_InvoiceDetailsMasters(InvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_InvoiceDetailsMasters(InvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_InvoiceDetailsMasters1(InvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_InvoiceDetailsMasters1(InvoiceDetailsMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_CompanyMasters(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_CompanyMasters(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_CompanyMasters1(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_CompanyMasters1(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_InvoiceMasters(InvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_InvoiceMasters(InvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_InvoiceMasters1(InvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_InvoiceMasters1(InvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_ClientMasters(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_ClientMasters1(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_ClientMasters1(ClientMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_ProformaInvoiceMasters(ProformaInvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = this;
	}
	
	private void detach_ProformaInvoiceMasters(ProformaInvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster = null;
	}
	
	private void attach_ProformaInvoiceMasters1(ProformaInvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_ProformaInvoiceMasters1(ProformaInvoiceMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_UserMasters(UserMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = this;
	}
	
	private void detach_UserMasters(UserMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster1 = null;
	}
	
	private void attach_UserMasters1(UserMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster2 = this;
	}
	
	private void detach_UserMasters1(UserMaster entity)
	{
		this.SendPropertyChanging();
		entity.UserMaster2 = null;
	}
}
#pragma warning restore 1591
